<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>王离谱的小破站</title>
        <link>https://blog.yearsuns.com/</link>
        <description>Recent content on 王离谱的小破站</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>王离谱</copyright>
        <lastBuildDate>Wed, 12 Feb 2025 01:13:56 +0800</lastBuildDate><atom:link href="https://blog.yearsuns.com/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>REST API的最佳实践</title>
        <link>https://blog.yearsuns.com/p/best-practices-for-rest-api/</link>
        <pubDate>Wed, 12 Feb 2025 01:13:56 +0800</pubDate>
        
        <guid>https://blog.yearsuns.com/p/best-practices-for-rest-api/</guid>
        <description>&lt;h2 id=&#34;我们将从这篇文章中学到什么&#34;&gt;我们将从这篇文章中学到什么
&lt;/h2&gt;&lt;h3 id=&#34;-rest-api-的基本原则&#34;&gt;👉 REST API 的基本原则
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;RESTful架构的核心概念&lt;/li&gt;
&lt;li&gt;关键 HTTP 方法及其适当用途&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;-api-设计的最佳实践&#34;&gt;👉 API 设计的最佳实践
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;如何设计有意义且高效的面向资源的 URL。&lt;/li&gt;
&lt;li&gt;正确使用标准 HTTP 状态代码的重要性。&lt;/li&gt;
&lt;li&gt;实现过滤、排序和分页的技术。&lt;/li&gt;
&lt;li&gt;需要清晰、一致的 API 文档和工具来帮助实现这一点。&lt;/li&gt;
&lt;li&gt;有效的 API 版本控制策略，以确保向后兼容性。&lt;/li&gt;
&lt;li&gt;保护 API 安全的最佳实践，包括身份验证和 HTTPS。&lt;/li&gt;
&lt;li&gt;如何以用户友好且信息丰富的方式处理错误。&lt;/li&gt;
&lt;li&gt;维护 RESTful 原则和避免常见错误的实用技巧。&lt;/li&gt;
&lt;li&gt;对设计可扩展且直观的 API 的见解。&lt;/li&gt;
&lt;li&gt;API 设计中的常见陷阱以及如何避免它们。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;-实用的注意事项&#34;&gt;👉 实用的注意事项
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;维护 RESTful 原则和避免常见错误的实用技巧。&lt;/li&gt;
&lt;li&gt;对设计可扩展且直观的 API 的见解。&lt;/li&gt;
&lt;li&gt;API 设计中的常见陷阱以及如何避免它们。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;什么是-api&#34;&gt;什么是 API？
&lt;/h2&gt;&lt;p&gt;应用程序编程接口 (API) 是用于集成应用软件和服务的一组工具、定义和协议。它可以让您的产品和服务与其他产品和服务进行通信，而无需不断构建新的连接基础设施。&lt;/p&gt;
&lt;p&gt;API 可以是私有的（仅供内部使用）、合作的（与特定合作伙伴共享以提供额外的收入来源）或公开的（允许第三方开发与您的 API 交互的应用程序以促进创新）。&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.redhat.com/en/topics/api/what-is-a-rest-api&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.redhat.com/en/topics/api/what-is-a-rest-api&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;什么是-rest-api&#34;&gt;什么是 REST API？
&lt;/h2&gt;&lt;p&gt;REST API（也称为 RESTful API）是一种符合 REST 架构风格约束并允许与 RESTful Web 服务交互的应用程序编程接口（API 或 Web API）。REST 代表表述性状态转移，由计算机科学家 Roy Fielding 创建。&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.redhat.com/en/topics/api/what-is-a-rest-api&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.redhat.com/en/topics/api/what-is-a-rest-api&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;rest-api-架构约束&#34;&gt;REST API 架构约束
&lt;/h2&gt;&lt;p&gt;REST 是一组架构约束，而不是协议或标准。以下是理想 RESTful API 的约束：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;客户端-服务器架构&lt;/strong&gt;：由客户端、服务器和资源组成的客户端-服务器架构，请求通过 HTTP 进行管理。只要服务器和客户端之间的接口不变，它们也可以被替换和独立开发（也可以使用不同的编程语言）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;无状态&lt;/strong&gt;：在客户端-服务器通信中，在处理请求传输期间，服务器上不应存储任何数据。这意味着请求之间不会存储任何客户端信息，并且每个请求都是独立且无关联的。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;可缓存&lt;/strong&gt;：客户端应该能够将响应存储在缓存中。这极大地提高了 API 的性能。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;分层系统&lt;/strong&gt;：服务器可以有多个层级来实现。这种分层架构有助于通过实现负载平衡来提高可扩展性。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;按需代码&lt;/strong&gt;：此约束是可选的。此约束表示可以通过允许从服务器下载代码并执行代码来在运行时扩展客户端应用程序的功能。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;统一接口&lt;/strong&gt;：统一接口约束是任何 RESTful 系统设计的基础。它简化并解耦了架构，使每个部分能够独立发展。&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;这个统一接口的四个约束是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;请求中的资源标识&lt;/strong&gt;：使用 URI 在请求中标识单个资源。资源本身在概念上与返回给客户端的表示形式是分开的。例如，服务器可以将数据库中的数据以 HTML、XML 或 JSON 的形式发送，而这些都不是服务器的内部表示形式。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;通过表示来操作资源&lt;/strong&gt;：当客户端持有资源的表示（包括附加的任何元数据）时，它有足够的信息来修改或删除资源的状态。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;自描述消息&lt;/strong&gt;：每条消息都包含足够的信息来描述如何处理该消息。例如，可以通过媒体类型指定要调用哪个解析器。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;超媒体作为应用程序状态引擎 (HATEOAS)&lt;/strong&gt; — 访问 REST 应用程序的初始 URI 后（类似于人类 Web 用户访问网站主页），REST 客户端应该能够动态使用服务器提供的链接来发现所需的所有可用资源。随着访问的进行，服务器将使用包含指向当前可用的其他资源的超链接的文本进行响应。客户端无需使用有关服务器结构的信息进行硬编码。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;来源：&lt;a class=&#34;link&#34; href=&#34;https://en.wikipedia.org/wiki/REST#Uniform_interface&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://en.wikipedia.org/wiki/REST#Uniform_interface&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;什么是资源&#34;&gt;什么是资源？
&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;REST中信息的关键抽象是资源。任何可以命名的信息都可以是资源：文档或图像、时间服务（例如“洛杉矶今日天气”）、其他资源的集合（例如“今日畅销产品”，即产品资源的集合）、非虚拟对象（例如人）等等。&lt;/p&gt;
&lt;p&gt;— &lt;a class=&#34;link&#34; href=&#34;http://www.ics.uci.edu/~fielding/pubs/dissertation/rest_arch_style.htm#sec_5_2_1_1&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Roy Fielding 的论文&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;单例和集合资源&#34;&gt;单例和集合资源
&lt;/h3&gt;&lt;p&gt;资源可以是单例，也可以是集合。&lt;/p&gt;
&lt;p&gt;例如，&amp;ldquo;customers&amp;rdquo; 是一个集合资源，&amp;ldquo;customer&amp;rdquo; 是一个单例资源。&lt;/p&gt;
&lt;p&gt;我们可以使用 URI 来识别 &amp;ldquo;customers&amp;rdquo; 集合资源。我们可以使用 URI 来&lt;code&gt;/customers&lt;/code&gt;识别单个 &amp;ldquo;customer&amp;rdquo; 资源&lt;code&gt;/customers/{customerId}&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/customers // 是一个集合资源
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/customers/&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;id&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; // 是一个单例资源
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;集合和子集资源&#34;&gt;集合和子集资源
&lt;/h3&gt;&lt;p&gt;资源也可能包含子集资源。&lt;/p&gt;
&lt;p&gt;例如，可以使用以下方式识别特定 &amp;ldquo;customers&amp;rdquo; 的子集资源 &amp;ldquo;account&amp;rdquo; &lt;code&gt;/customers/{customerId}/accounts&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;类似地，可以识别子集合资源 &amp;ldquo;accounts&amp;rdquo; 内的单例资源 &amp;ldquo;account&amp;rdquo; &lt;code&gt;/customers/{customerId}/accounts/{accountId}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;/customers //是一个集合资源&lt;/p&gt;
&lt;p&gt;/customers/{ id }/accounts //是一个子集合资源（客户的帐户）&lt;/p&gt;
&lt;p&gt;/customers/{customerId}/accounts/{accountId} //是一个单例资源（客户的特定帐户）&lt;/p&gt;
&lt;h2 id=&#34;uri统一资源标识符&#34;&gt;URI（统一资源标识符）
&lt;/h2&gt;&lt;p&gt;URI 代表&lt;a class=&#34;link&#34; href=&#34;https://en.wikipedia.org/wiki/Uniform_Resource_Identifier&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;统一资源标识符&lt;/a&gt;(URI)。它标识网络上的逻辑或物理资源。URL 和 URN 是 URI 的子类型。URL 定位资源，而 URN 命名资源。&lt;/p&gt;
&lt;p&gt;REST API 使用 URI 来定位资源。REST API 设计人员应创建 URI，以便将 REST API 的资源模型传达给 API 的潜在客户。如果资源命名得当，API 就会直观且易于使用。如果命名不当，同一个 API 的使用和理解就会变得困难。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.yearsuns.com/p/best-practices-for-rest-api/uri.webp&#34;
	width=&#34;720&#34;
	height=&#34;177&#34;
	srcset=&#34;https://blog.yearsuns.com/p/best-practices-for-rest-api/uri_hu_fba245286d270c77.webp 480w, https://blog.yearsuns.com/p/best-practices-for-rest-api/uri_hu_179c012895a3cc30.webp 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;URI&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;406&#34;
		data-flex-basis=&#34;976px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.yearsuns.com/p/best-practices-for-rest-api/uri-vs-url.webp&#34;
	width=&#34;720&#34;
	height=&#34;271&#34;
	srcset=&#34;https://blog.yearsuns.com/p/best-practices-for-rest-api/uri-vs-url_hu_efb5016e88ace6ee.webp 480w, https://blog.yearsuns.com/p/best-practices-for-rest-api/uri-vs-url_hu_8039dcaf63480cdb.webp 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;URI 与 URL 之间的区别（来源：https://refine.dev/blog/uri-vs-url/#introduction）&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;265&#34;
		data-flex-basis=&#34;637px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;最佳实践应该做的和不应该做的&#34;&gt;最佳实践：应该做的和不应该做的
&lt;/h2&gt;&lt;h3 id=&#34;1-使用适当的-http-方法动词定义-api-操作&#34;&gt;1. 使用适当的 HTTP 方法（动词）定义 API 操作
&lt;/h3&gt;&lt;p&gt;HTTP协议定义了许多为请求赋予语义的方法。大多数 RESTful Web API 使用的常见 HTTP 方法包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;GET&lt;/strong&gt;在指定的 URI 处检索资源的表述，响应消息的主体包含所请求资源的详细信息。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;POST&lt;/strong&gt;在指定的 URI 处创建新资源，请求消息的主体提供了新资源的详细信息。注意：POST还可用于触发不实际创建资源的操作。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;PUT&lt;/strong&gt;在指定的 URI 处创建或替换资源，请求消息的主体指定要创建或更新的资源。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;PATCH&lt;/strong&gt;对资源执行部分更新，请求主体指定要应用于资源的一组更改。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;DELETE&lt;/strong&gt;删除指定 URI 处的资源。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;特定请求的效果应取决于资源是集合还是单个项目。下表使用电子商务示例总结了大多数 RESTful 实现所采用的通用约定。&lt;/p&gt;
&lt;p&gt;注意：并非所有这些请求都可能被实现——这取决于具体情况。&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Resource&lt;/th&gt;
          &lt;th&gt;POST&lt;/th&gt;
          &lt;th&gt;GET&lt;/th&gt;
          &lt;th&gt;PUT&lt;/th&gt;
          &lt;th&gt;DELETE&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;/customers&lt;/td&gt;
          &lt;td&gt;Create a new customer&lt;/td&gt;
          &lt;td&gt;Retrieve all customers&lt;/td&gt;
          &lt;td&gt;Bulk update of customers&lt;/td&gt;
          &lt;td&gt;Remove all customers&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;/customers/1&lt;/td&gt;
          &lt;td&gt;Error&lt;/td&gt;
          &lt;td&gt;Retrieve the details for customer 1&lt;/td&gt;
          &lt;td&gt;Update the details of customer 1 if it exists&lt;/td&gt;
          &lt;td&gt;Remove customer 1&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;/customers/1/orders&lt;/td&gt;
          &lt;td&gt;Create a new order for customer 1&lt;/td&gt;
          &lt;td&gt;Retrieve all orders for customer 1&lt;/td&gt;
          &lt;td&gt;Bulk update of orders for customer 1&lt;/td&gt;
          &lt;td&gt;Remove all orders for customer 1&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;POST&lt;/strong&gt;、&lt;strong&gt;PUT&lt;/strong&gt;和&lt;strong&gt;PATCH&lt;/strong&gt;之间的区别可能会令人困惑。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;POST请求创建资源并将其添加到资源集合中。然后向客户端返回新创建的资源 URI。POST请求还可用于向现有资源提交数据以供处理，而无需创建任何新资源。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PUT请求会创建资源或更新现有资源。请求正文包含资源的完整表述。如果具有此 URI 的资源已存在，则将其替换。否则，如果服务器支持，则创建新资源。PUT请求最常应用于作为单个项目（例如特定客户）的资源，而不是集合。服务器可能支持更新但不支持通过 PUT 创建。是否支持通过 PUT 创建取决于客户端是否可以在资源存在之前有意义地为其分配URI。如果不能，则使用POST创建资源，使用PUT或PATCH进行更新。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PATCH请求对现有资源执行部分更新。请求正文指定要应用于资源的一组更改。这比使用PUT更高效，因为客户端仅发送更改，而不是资源的整个表示。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;PUT请求必须是幂等的。如果客户端多次提交相同的PUT请求，则结果应该始终相同（将使用相同的值修改相同的资源）。POST和PATCH请求不保证是幂等的。&lt;/p&gt;
&lt;h3 id=&#34;2-使用名词复数名词表示资源&#34;&gt;2. 使用名词（复数名词）表示资源
&lt;/h3&gt;&lt;p&gt;RESTful URI 应该引用作为事物（名词）的资源，而不是引用动作（动词），因为名词具有动词所不具备的属性 — 同样，资源也具有属性。以下是一些资源示例：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用户(user)&lt;/li&gt;
&lt;li&gt;帐户(account)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其资源URI可以设计如下：&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;HTTP Method&lt;/th&gt;
          &lt;th&gt;Endpoint&lt;/th&gt;
          &lt;th&gt;Description&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;GET&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;/accounts&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Returns a list of accounts&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;GET&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;/accounts/{accountNumber}&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Returns the account with account number &lt;code&gt;{accountNumber}&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;GET&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;/users&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Returns a list of users&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;GET&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;/users/{id}&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Returns the user with ID &lt;code&gt;{id}&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;GET&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;/orders&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;Good&lt;/strong&gt; - Returns a list of orders&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;GET&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;/create-order&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;Avoid&lt;/strong&gt; - verb or action-based names&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;GET&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;/students&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;Good&lt;/strong&gt; - Returns a list of students&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;GET&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;/student&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;Avoid&lt;/strong&gt; - singular names&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;3使用子资源建立关系&#34;&gt;3.使用子资源建立关系
&lt;/h3&gt;&lt;p&gt;使用一致的资源命名约定和 URI 格式，以最大程度地减少歧义并实现最大的可读性和可维护性。实施以下设计提示可实现一致性：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在 REST 中，关系通常由子资源建模。对子资源使用以下模式。&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;HTTP Method&lt;/th&gt;
          &lt;th&gt;Endpoint&lt;/th&gt;
          &lt;th&gt;Description&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;GET&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;/{resource}/{resource-id}/{sub-resource}&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Retrieves a list of sub-resources&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;GET&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;/{resource}/{resource-id}/{sub-resource}/{sub-resource-id}&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Retrieves a specific sub-resource&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;POST&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;/{resource}/{resource-id}/{sub-resource}&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Creates a new sub-resource&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;GET&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;/post/{post-id}/comments&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Retrieves a list of comments for a post&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;GET&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;/post/{post-id}/comments/{comment-id}&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Retrieves a specific comment for a post&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;POST&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;/post/{post-id}/comments&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Creates a new comment for a post&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;GET&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;/cars/711/drivers/&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Returns a list of drivers for car 711&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;GET&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;/cars/711/drivers/4&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Returns driver #4 for car 711&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;4注重可读性和一致性&#34;&gt;4.注重可读性和一致性
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;不要在 URI 中使用尾部斜杠 (/)&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;GET /device-management/managed-devices/ 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;GET /device-management/managed-devices /*✅这是一个更好的版本*/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;使用连字符 (-) 和短横线命名 ( some-var-name) 来提高 URI 的可读性&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;GET /devicemanagement/manageddevices/ 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;GET /device-management/managed-devices /*✅这是一个更好的版本* / 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;GET /m y -folder/ my -doc // ✅ 推荐
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;GET /MY-FOLDER/ my -doc // ❌ 避免
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;GET /My-Folder/ my -doc // ❌ 避免
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;避免使用下划线 ( _ ) 和驼峰式命名 ( someVarName) 蛇形命名 ( some_var_name) 帕萨尔式命名 ( SomeVarName)&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;GET /managed-entities/&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt; id &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;/install-script-location // ✅ 更易读
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;GET /managed_entities/&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt; id &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;/install_Script_Location // ❌ 蛇形命名法- 易读但不常规
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;GET /managedEntities/&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt; id &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;/installScriptLocation // ❌ 驼峰命名法- 可读性较差
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;不要使用文件扩展名&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/device-management/managed-devices.xml /*❌请勿使用它*/ 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/device-management/managed-devices /*✅这是正确的 URI*/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;切勿在 URI 中使用CRUD函数名称&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/* ❌ 避免 */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HTTP GET / get -managed-devices      
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HTTP POST /create-managed-devices 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/* ✅ 推荐 */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HTTP GET /managed-devices          // 获取所有设备
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HTTP POST /managed-devices          // 创建新设备
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HTTP GET /managed-devices/&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;id&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;     // 获取给定 Id 的设备
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HTTP PUT /managed-devices/&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;id&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;     // 更新给定 Id 的设备
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HTTP DELETE /managed-devices/&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;id&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;     // 删除给定 Id 的设备
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;不要在 URI 中使用动词&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;GET /scripts/&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;id&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;/execute    // ❌ 不要这样做！- 这是 RPC，而不是 REST
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;POST /scripts               // ✅ 推荐：使用 POST 操作创建脚本
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;GET /scripts/&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;id&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;/status    // 检查执行状态
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;5使用http响应状态码&#34;&gt;5.使用HTTP响应状态码
&lt;/h3&gt;&lt;p&gt;始终使用常规 HTTP 状态码来响应对 API 发出的请求。这将帮助用户了解发生了什么 — 请求是否成功，是否失败，或者其他情况。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.yearsuns.com/p/best-practices-for-rest-api/http-status-codes.png&#34;
	width=&#34;1224&#34;
	height=&#34;1710&#34;
	srcset=&#34;https://blog.yearsuns.com/p/best-practices-for-rest-api/http-status-codes_hu_f882e7cc374d92cd.png 480w, https://blog.yearsuns.com/p/best-practices-for-rest-api/http-status-codes_hu_e1355992283e7479.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;HTTP状态码&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;71&#34;
		data-flex-basis=&#34;171px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;6使用过滤排序和分页来检索请求的数据&#34;&gt;6.使用过滤、排序和分页来检索请求的数据
&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Feature&lt;/th&gt;
          &lt;th&gt;Description&lt;/th&gt;
          &lt;th&gt;Example Usage&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Sorting&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;Allows sorting of the dataset based on specified parameters.&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;/companies?sort=rank_asc&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Filtering&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;Filters the dataset based on given criteria in query parameters.&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;/companies?category=banking&amp;amp;location=india&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Searching&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;Searches for specific terms within the dataset.&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;/companies?search=Digital&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Pagination&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;Divides the dataset into smaller chunks for easier handling and improved performance.&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;/companies?page=23&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;7-使用-hateoas-实现到相关资源的导航&#34;&gt;7. 使用 HATEOAS 实现到相关资源的导航
&lt;/h3&gt;&lt;p&gt;HATEOAS（超文本作为应用程序状态引擎）是 REST 的一个原则，允许客户端仅通过响应中提供的超链接来浏览资源并发现可用的操作。这意味着客户端不需要事先了解 URI；相反，每个 HTTP GET 请求都会返回必要的信息和相关资源的链接，从而实现对 API 的动态探索。&lt;/p&gt;
&lt;p&gt;在示例响应中，&lt;code&gt;/books/1&lt;/code&gt;分享可导航的链接，例如&lt;code&gt;/authors/1&lt;/code&gt; &lt;code&gt;/books/1/reviews&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{ 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;“books” ： [ &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    { 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#ae81ff&#34;&gt;“id” ： 1 ，&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#ae81ff&#34;&gt;“title” ： “了不起的盖茨比” ，&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#ae81ff&#34;&gt;“author” ： “F·斯科特·菲茨杰拉德” ，&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#ae81ff&#34;&gt;“links” ： { &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#ae81ff&#34;&gt;“self” ： “/books/1” ，&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#ae81ff&#34;&gt;“author” ： “/authors/1” ，&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#ae81ff&#34;&gt;“reviews” ： “/books/1/reviews” &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      } 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    } &lt;span style=&#34;color:#ae81ff&#34;&gt;，&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    { 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#ae81ff&#34;&gt;“id” ： 2 ，&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#ae81ff&#34;&gt;“title” ： “杀死一只知更鸟” ，&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#ae81ff&#34;&gt;“author” ： “哈珀·李” ，&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#ae81ff&#34;&gt;“links” ： { &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#ae81ff&#34;&gt;“self” ： “/books/2” ，&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#ae81ff&#34;&gt;“author” ： “/authors/2” ，&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#ae81ff&#34;&gt;“reviews” ： “/books/2/reviews” &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      } 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    } 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  ] 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;8-使用-ssl-确保安全&#34;&gt;8. 使用 SSL 确保安全
&lt;/h3&gt;&lt;p&gt;SSL（安全套接字层）对于保护 REST API 免受恶意攻击至关重要。它确保服务器和客户端之间的通信是私密的，并且用户只能访问他们有权查看的数据。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;https://&lt;/code&gt; 我们可以通过查看URL来判断 REST API 是否受 SSL 保护。例如，&lt;code&gt;https://mysite.com/posts&lt;/code&gt; 受 SSL 保护，而 &lt;code&gt;http://mysite.com/posts&lt;/code&gt; 不受 SSL 保护。&lt;/p&gt;
&lt;h3 id=&#34;9提供准确的api文档&#34;&gt;9.提供准确的API文档
&lt;/h3&gt;&lt;p&gt;良好的 API 文档可帮助开发人员正确使用我们的 API。它可以让更多人想要使用我们的 API 并更好地使用它。一个流行的 API &lt;a class=&#34;link&#34; href=&#34;https://www.openapis.org/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;文档工具是OpenAPI ( Swagger )&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;10-restful-web-api-版本控制&#34;&gt;10. RESTful Web API 版本控制
&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Versioning Method&lt;/th&gt;
          &lt;th&gt;Description&lt;/th&gt;
          &lt;th&gt;Example Usage&lt;/th&gt;
          &lt;th&gt;Real-World Examples&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;URI Path&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;Includes the version number directly in the API path.&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;http://www.example.com/api/v1/products&lt;/code&gt;&lt;!-- raw HTML omitted --&gt;&lt;code&gt;http://www.example.com/api/v2/products&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;- &lt;a class=&#34;link&#34; href=&#34;https://developer.twitter.com/en/docs/twitter-api/versioning&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Twitter&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;- &lt;a class=&#34;link&#34; href=&#34;https://developer.paypal.com/docs/api/overview/#get-credentials&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;PayPal&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;- &lt;a class=&#34;link&#34; href=&#34;https://cloud.google.com/translate/docs/reference/rest&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Google Translate&lt;/a&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Query Parameters&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;Specifies the version number as a query parameter in the URL.&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;http://www.example.com/api/products?version=1&lt;/code&gt;&lt;!-- raw HTML omitted --&gt;&lt;code&gt;http://www.example.com/api/products?version=2&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;- &lt;a class=&#34;link&#34; href=&#34;https://cloud.google.com/translate/docs/reference/rest&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Google Translation APIs&lt;/a&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Custom Headers&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;Uses custom headers to specify the API version.&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;http://localhost:8080/api/products&lt;/code&gt;&lt;!-- raw HTML omitted --&gt;Headers: &lt;code&gt;X-API-VERSION=1&lt;/code&gt;&lt;!-- raw HTML omitted --&gt;&lt;code&gt;http://localhost:8080/api/products&lt;/code&gt;&lt;!-- raw HTML omitted --&gt;Headers: &lt;code&gt;X-API-VERSION=2&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;-&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Content Negotiation&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;Uses the &lt;code&gt;Accept&lt;/code&gt; header to specify the version of the API.&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;http://localhost:8080/api/products&lt;/code&gt;&lt;!-- raw HTML omitted --&gt;Headers: &lt;code&gt;Accept=application/vnd.javaguides-v1+json&lt;/code&gt;&lt;!-- raw HTML omitted --&gt;&lt;code&gt;http://localhost:8080/api/products&lt;/code&gt;&lt;!-- raw HTML omitted --&gt;Headers: &lt;code&gt;Accept=application/vnd.javaguides-v2+json&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;- &lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/en/rest/overview/resources-in-the-rest-api&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GitHub&lt;/a&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;11-api-安全和访问控制&#34;&gt;11. API 安全和访问控制
&lt;/h3&gt;&lt;p&gt;确保 API 安全并控制谁可以使用它是制作优质 RESTful API 的关键部分。以下是一些实现此目的的方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;设置 &lt;a class=&#34;link&#34; href=&#34;https://oauth.net/2/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;OAuth 2.0&lt;/a&gt; 或 &lt;a class=&#34;link&#34; href=&#34;https://en.wikipedia.org/wiki/JSON_Web_Token&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;JSON Web Tokens (JWT)&lt;/a&gt;，以便未经身份验证的用户无法访问&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;API 密钥显示谁在使用。API速率限制可阻止人们过度使用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;实现基于角色的访问控制（RBAC）等。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;12-不要忘记-api-性能&#34;&gt;12. 不要忘记 API 性能
&lt;/h3&gt;&lt;p&gt;让我们的 API 更好地发挥作用是让用户满意、降低成本和更轻松地发展的关键。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;有效缓存&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;数据压缩方法&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;异步处理&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;处理批处理操作&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;测量 API 性能并分析 API 使用情况&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;监控 API 健康和正常运行时间&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;测试 RESTful API（单元测试、集成测试、负载测试、安全测试）等。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;结论&#34;&gt;结论
&lt;/h2&gt;&lt;p&gt;优秀的 REST API 是通过遵循关键规则和最佳实践来构建的。&lt;/p&gt;
&lt;p&gt;通过遵守这些规则，我们将构建易于使用、可靠且面向未来的 API。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注：本文译自 &lt;a class=&#34;link&#34; href=&#34;https://medium.com/@syedabdullahrahman/mastering-rest-api-design-essential-best-practices-dos-and-don-ts-for-2024-dd41a2c59133&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://medium.com/@syedabdullahrahman/mastering-rest-api-design-essential-best-practices-dos-and-don-ts-for-2024-dd41a2c59133&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>SMART原则：让目标不再遥不可及</title>
        <link>https://blog.yearsuns.com/p/mastering-goal-setting-with-the-smart-framework/</link>
        <pubDate>Tue, 11 Feb 2025 18:11:56 +0800</pubDate>
        
        <guid>https://blog.yearsuns.com/p/mastering-goal-setting-with-the-smart-framework/</guid>
        <description>&lt;h2 id=&#34;-什么是smart原则&#34;&gt;🌟 什么是SMART原则？
&lt;/h2&gt;&lt;p&gt;我们生活中常常给自己定下各种目标，想要健身、读书、升职、旅行……但一旦目标太大或太模糊，就容易半途而废。SMART原则是一个经过验证的工具，能帮助我们设定清晰、具体并能实现的目标，打破“空想目标”带来的无力感。&lt;/p&gt;
&lt;p&gt;SMART是五个英文单词的首字母缩写，代表了目标设定的五个关键特征：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;S&lt;/strong&gt;: &lt;strong&gt;Specific（具体）&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;M&lt;/strong&gt;: &lt;strong&gt;Measurable（可衡量）&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;A&lt;/strong&gt;: &lt;strong&gt;Achievable（可实现）&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;R&lt;/strong&gt;: &lt;strong&gt;Relevant（相关性）&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;T&lt;/strong&gt;: &lt;strong&gt;Time-bound（时限性）&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;-smart原则的起源&#34;&gt;📜 SMART原则的起源
&lt;/h2&gt;&lt;p&gt;SMART原则并不是一蹴而就的，它是由美国管理学专家&lt;strong&gt;George T. Doran&lt;/strong&gt;于1981年提出的，最早出现在他的文章《There’s a S.M.A.R.T. Way to Write Management’s Goals and Objectives》中。Doran提出，很多管理目标制定的模糊性和不切实际的期望，导致了企业和个人无法有效实现目标，因此，他需要提出一个能具体化目标设定、避免“空谈”的方法——SMART。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;George T. Doran&lt;/strong&gt;当时的初衷是解决企业和组织在设定目标时遇到的几个常见问题：目标过于模糊，执行步骤不清晰，结果难以衡量，且往往缺乏完成的时限。&lt;/p&gt;
&lt;h2 id=&#34;-为什么要有smart&#34;&gt;🧐 为什么要有SMART？
&lt;/h2&gt;&lt;p&gt;在Doran的时代，目标设定存在一个普遍问题，那就是许多管理目标没有明确性，很多时候只是宽泛的愿景或“愿望”，如“提高员工满意度”或“增加市场份额”。这类目标没有任何执行上的指引，导致了许多企业无论如何努力，结果却始终看不见。&lt;/p&gt;
&lt;p&gt;例如，如果一个公司设定的目标是“提高员工的工作动力”，这个目标看起来似乎是有意义的，但它缺乏可操作性和评估标准——到底“提高”到什么程度才算成功？这个问题没有明确的答案，导致目标变得空洞且难以达成。&lt;/p&gt;
&lt;h2 id=&#34;-为什么smart有效&#34;&gt;🧠 为什么SMART有效？
&lt;/h2&gt;&lt;p&gt;在心理学中，设定明确目标被认为是提高动机和焦点的有效方法。人类的大脑对于模糊不清的任务缺乏足够的投入感，容易在各种诱惑面前分心。SMART原则通过将目标细化、量化、并赋予紧迫感，让我们的大脑“抓住”了目标，不容易走神。&lt;/p&gt;
&lt;h3 id=&#34;1-具体specific&#34;&gt;1. &lt;strong&gt;具体（Specific）&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;如果目标只是“我想变得更健康”，它几乎没有任何行动指引。SMART的具体化要求目标要清晰明确。例如：“我计划每周跑步三次，每次30分钟。”这个目标具体到了“跑步”“次数”“时间”，容易给人一种可以立即行动的感觉。&lt;/p&gt;
&lt;p&gt;目标具体性越强，任务的执行障碍就越小。这是因为大脑对模糊的目标感到困惑和不安，而明确的目标则让大脑更容易激发执行动力。&lt;/p&gt;
&lt;h3 id=&#34;2-可衡量measurable&#34;&gt;2. &lt;strong&gt;可衡量（Measurable）&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;没有衡量标准的目标，就像是开车但不看导航。比如，“我想提高身体素质”就太空泛，如何知道什么时候“提高了”呢？而SMART则要求目标具有可衡量的标准，例如：“我要在三个月内将跑步速度提高5公里每小时。”&lt;/p&gt;
&lt;p&gt;明确的衡量标准让大脑能不断确认进展，获得即时反馈，增强自我效能感——“我做得不错”的感觉。&lt;/p&gt;
&lt;h3 id=&#34;3-可实现achievable&#34;&gt;3. &lt;strong&gt;可实现（Achievable）&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;如果你想在三个月内成为铁人三项冠军，那可能太不现实了。SMART原则提到，目标要根据个人的现有资源和能力设定。可实现性并非要求轻松，而是要能够在现有条件下有所突破。&lt;/p&gt;
&lt;p&gt;这一点体现了亚里士多德的“黄金中庸”思想。过高或过低的期望都会让目标变得不合适，过高可能让人感到无望，过低则无法激发成长。&lt;/p&gt;
&lt;h3 id=&#34;4-相关性relevant&#34;&gt;4. &lt;strong&gt;相关性（Relevant）&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;你的目标要与你的长期愿景和核心价值观相关联。如果你设定的目标与自己的真实兴趣或需求脱节，执行起来往往缺乏动力。例如：“我要学习一门新语言，因为我打算明年去旅游。”&lt;/p&gt;
&lt;p&gt;如果目标和个人动机、兴趣不符，大脑会默认“这不值得投入”。因此，相关性决定了目标的重要性和个人投入的程度。&lt;/p&gt;
&lt;h3 id=&#34;5-时限性time-bound&#34;&gt;5. &lt;strong&gt;时限性（Time-bound）&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;没有时限的目标，就像是漂浮在空中的气球，永远不会落地。SMART原则通过设定具体的时间限制，促使行动的紧迫感产生。比如：“我将在六个月内完成这本书的阅读。”&lt;/p&gt;
&lt;p&gt;时间的有限性体现了时间哲学中的“现时性”——在有限时间内，我们必须作出选择并进行投入。而过于宽松的时间框架反而容易让人推延。&lt;/p&gt;
&lt;h2 id=&#34;-如何运用smart原则&#34;&gt;🔑 如何运用SMART原则？
&lt;/h2&gt;&lt;p&gt;运用SMART原则其实很简单，关键在于每次设定目标时，深入思考并将每个元素加以落实。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;举个例子&lt;/strong&gt;：
假设你想提高体能，但传统目标“我要变强”显然过于模糊。根据SMART原则，你可以将目标转化为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;具体&lt;/strong&gt;：我将每周去健身房3次，每次锻炼40分钟。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;可衡量&lt;/strong&gt;：我要在3个月内将我的卧推重量提升5公斤。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;可实现&lt;/strong&gt;：根据当前我的体能水平，逐步增加每周的训练强度是现实的。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;相关性&lt;/strong&gt;：因为我希望能更加健康，增强体力以便更好地应对日常工作和生活挑战。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;时限性&lt;/strong&gt;：我将在3个月内达成这一目标。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;-smart目标的实际案例&#34;&gt;🏁 SMART目标的实际案例
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;案例一&lt;/strong&gt;：学习英语&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;目标：我要在六个月内通过英语托福考试，目标分数为90分。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;具体&lt;/strong&gt;：每周安排15小时的学习时间，重点提升听力和口语能力。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;可衡量&lt;/strong&gt;：每月模拟考试一次，检查听力和口语的进展。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;可实现&lt;/strong&gt;：根据目前英语水平，合理的学习计划能让我逐步达到目标分数。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;相关性&lt;/strong&gt;：通过托福考试能让我申请到心仪的国际大学，是我职业发展的关键步骤。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;时限性&lt;/strong&gt;：六个月后完成托福考试，并达到目标分数。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;案例二&lt;/strong&gt;：完成销售目标&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;目标：我要在三个月内将销售额提升20%。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;具体&lt;/strong&gt;：通过增加客户联系和优化销售话术，每周增加5次客户拜访。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;可衡量&lt;/strong&gt;：每月追踪销售额，并与上月进行对比。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;可实现&lt;/strong&gt;：根据现有资源和市场情况，通过提高拜访频次和改进沟通方式能达到目标。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;相关性&lt;/strong&gt;：提高销售额是公司业绩提升的关键，也是我个人职业成长的一部分。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;时限性&lt;/strong&gt;：三个月内完成销售目标。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;案例三&lt;/strong&gt;：增加收入&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;目标：我要在六个月内将个人收入提升30%。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;具体&lt;/strong&gt;：通过副业和提升本职工作表现来增加收入。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;可衡量&lt;/strong&gt;：每月记录收入并与上月进行对比，评估副业和本职收入的变化。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;可实现&lt;/strong&gt;：合理安排时间，利用业余时间投入副业，同时提升本职工作表现。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;相关性&lt;/strong&gt;：增加收入有助于提升生活质量，实现经济独立。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;时限性&lt;/strong&gt;：六个月内实现收入增长。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;-smart的影响与发展&#34;&gt;🏢 SMART的影响与发展
&lt;/h2&gt;&lt;p&gt;虽然Doran的初衷是帮助企业制定可执行的管理目标，但随着时间的推移，SMART原则不仅仅局限于管理学领域，也被广泛应用于个人目标设定、项目管理、教育和生活规划等多个领域。它已经成为一个跨学科的工具，帮助人们以更加精确的方式设定、追踪和实现目标。&lt;/p&gt;
&lt;h2 id=&#34;-总结目标管理的哲学与心理学之道&#34;&gt;🎯 总结：目标管理的哲学与心理学之道
&lt;/h2&gt;&lt;p&gt;SMART原则从最初的管理学应用，到如今成为各行各业目标设定的通用工具，其核心思想在于帮助人们清晰、量化并确保目标能够顺利实现。通过SMART，我们能够避免目标模糊带来的困惑，减少拖延，提高效率，更有动力朝着目标前进。正如Doran当时所言：“目标必须是明确且可执行的，才能激发人们的行动力。”&lt;/p&gt;
&lt;p&gt;SMART原则的出现，犹如给目标设定领域打上了清晰的框架，让“梦想”不再只是天边的云朵，而是可以一步步实现的具体任务。&lt;/p&gt;
&lt;p&gt;SMART原则不仅仅是一个目标设定工具，它更深层次地连接了哲学和心理学的核心原理。在追求目标的过程中，我们不断在理性与情感、现实与理想之间进行拉锯。SMART帮助我们精准聚焦，通过清晰、可行的步骤实现目标，而不至于迷失在“想做却做不成”的自我困境中。&lt;/p&gt;
&lt;p&gt;无论你是追求个人成长，还是在职场中设定明确目标，SMART原则都可以成为你理性规划与心理动机的双重武器，助你逐步逼近理想的自我，最终实现那些曾经看似遥不可及的梦想。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>完美主义的陷阱：如何打破精神内耗，找到内心的自由</title>
        <link>https://blog.yearsuns.com/p/the-perfectionism-trap/</link>
        <pubDate>Tue, 11 Feb 2025 17:11:56 +0800</pubDate>
        
        <guid>https://blog.yearsuns.com/p/the-perfectionism-trap/</guid>
        <description>&lt;p&gt;完美主义，这个似乎追求卓越的美德，却往往带来无尽的心理压力和内耗。它让我们焦虑，让我们不敢停歇，让我们深陷“做得不够好”的陷阱中。到底是完美主义的力量让我们变得更强，还是它的束缚让我们始终无法真正感受到内心的自由？&lt;/p&gt;
&lt;p&gt;在这篇博客中，我们将深入探讨完美主义与精神内耗之间的关系，揭示它们背后深层的心理机制，并给出一些切实可行的方法，帮助你突破内心的困境。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;完美主义的两面性--追求卓越的美德还是精神枷锁&#34;&gt;完美主义的两面性 —— 追求卓越的“美德”还是精神枷锁？
&lt;/h2&gt;&lt;h3 id=&#34;11-完美主义的定义&#34;&gt;1.1 完美主义的定义：
&lt;/h3&gt;&lt;p&gt;完美主义听起来像是一个值得赞扬的品质，它让我们追求卓越、精益求精。完美主义者常常对自己设立极高的标准，力求把每件事情做到尽善尽美。然而，这种强烈的追求卓越往往让我们忽略了过程中的自我关怀。我们总是想着如何把结果做到完美，却常常忽视了“人是可以有缺陷的”这一事实。&lt;/p&gt;
&lt;p&gt;完美主义者将“完美”视为一种理想的标准，不达标便认为是失败。这种内心的标准常常带来无限的焦虑与不安，因为完美是无法轻易实现的，而每一次接近目标时，完美主义者又会定下更高的要求，永无止境。&lt;/p&gt;
&lt;h3 id=&#34;12-完美主义的背后--动机与驱动力&#34;&gt;1.2 完美主义的背后 —— 动机与驱动力：
&lt;/h3&gt;&lt;p&gt;完美主义的根源不仅仅来自对卓越的渴望，更深层的原因在于外部和内部的双重压力。社会的期望、家庭的要求，甚至自我价值的认同，都在推动我们去追求完美。尤其在当今信息化的社会，外界的标准和审视比任何时候都更加严苛，我们不断对照他人，不断自我加压。&lt;/p&gt;
&lt;p&gt;内心深处，完美主义者往往存在一种“完美即被爱的”信念。为了避免被批评或忽视，完美主义者可能认为只有做到极致才能获得认同与尊重。这种深层的心理需求驱动着他们不断超越自我。&lt;/p&gt;
&lt;h3 id=&#34;13-完美主义的双刃剑效应&#34;&gt;1.3 完美主义的双刃剑效应：
&lt;/h3&gt;&lt;p&gt;完美主义有其明显的优点：它激励我们不断进步，提升自我，做出超出常人的成就。然而，当完美主义没有得到有效管理时，它就像一把双刃剑，可能带来沉重的心理负担。&lt;/p&gt;
&lt;p&gt;过度完美主义者不仅会忽视过程中的努力和成就，更容易陷入无休止的自我怀疑和焦虑之中。当结果不尽如人意时，他们容易情绪低落，甚至会开始质疑自己的能力与价值。长期处于这种状态中，精神内耗渐渐积累，最终影响身心健康。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;精神内耗的形成--完美主义如何侵蚀我们的心理健康&#34;&gt;精神内耗的形成 —— 完美主义如何侵蚀我们的心理健康？
&lt;/h2&gt;&lt;h3 id=&#34;21-精神内耗的定义&#34;&gt;2.1 精神内耗的定义：
&lt;/h3&gt;&lt;p&gt;精神内耗的本质就是个体在面对内外部冲突时，消耗了大量的心理资源。完美主义者常常处于这种内耗的状态中，因为他们不断地与内心的“理想自我”和现实的“当前自我”进行博弈。理想和现实之间的巨大差距让他们心力交瘁，最终影响到日常生活的质量和工作效率。&lt;/p&gt;
&lt;p&gt;这种内耗表现为持续的自我批评、过度思考和无效的拖延。我们不断在脑海中重复“如果能更好一些会怎样”这种思想，却忽视了每一个小小的进步和成长。&lt;/p&gt;
&lt;h3 id=&#34;22-精神内耗的症状与表现&#34;&gt;2.2 精神内耗的症状与表现：
&lt;/h3&gt;&lt;p&gt;完美主义者的精神内耗通常表现为以下几种形式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;无休止的自我否定：&lt;/strong&gt; 不管做什么，总觉得自己还不够好，陷入“完美主义的陷阱”。无论工作成果如何，自己总认为“如果再努力一点就更好”。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;焦虑与拖延：&lt;/strong&gt; 完美主义者常常感到焦虑，因为他们害怕没有做到最好。由于对完美的过度追求，很多时候他们会拖延行动，等待完美的时机和条件，结果往往错过了很多机会。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;自我摧残：&lt;/strong&gt; 为了追求完美，完美主义者通常会过度压榨自己，牺牲休息时间和健康，甚至是亲密关系，最终形成恶性循环。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;23-精神内耗的恶性循环&#34;&gt;2.3 精神内耗的恶性循环：
&lt;/h3&gt;&lt;p&gt;精神内耗往往形成恶性循环。完美主义者不断自我批判，感到无法满足外界和内心的期望，从而产生更多的焦虑。这种焦虑驱动他们去努力工作，但由于他们总是觉得自己做得不够好，反而加剧了内心的压力。&lt;/p&gt;
&lt;p&gt;这种零和思维让他们始终处于“要么做到完美，要么就是失败”的状态，导致他们无法真正享受过程中的乐趣和成就。每一项任务、每一次努力，似乎都只为了达到一个遥不可及的完美标准。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;如何破局--走出完美主义的迷雾找到内心的自由&#34;&gt;如何破局 —— 走出完美主义的迷雾，找到内心的自由
&lt;/h2&gt;&lt;h3 id=&#34;31-认知重构重新定义完美&#34;&gt;3.1 认知重构：重新定义“完美”
&lt;/h3&gt;&lt;p&gt;完美并非一个固定的目标，它是一个相对的概念。每个人对完美的定义都不同，而外部世界的“完美”标准也不断变化。我们不能让完美成为束缚自己的枷锁。相反，应该将完美作为一个过程来看待，而非终极结果。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;完美是过程，而非结果：&lt;/strong&gt; 完美主义者可以通过认知调整，理解到每个进步和每一次努力都是一种完美，而不必过于苛求最终结果。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;32-建立健康的目标设定&#34;&gt;3.2 建立健康的目标设定：
&lt;/h3&gt;&lt;p&gt;目标设定时，遵循&lt;strong&gt;SMART原则&lt;/strong&gt;（S=Specific具体、M=Measurable可衡量、A=Attainable可实现、R=Relevant相关、T=Time-bound时限性），避免设定过高的目标带来的不必要的压力。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;逐步进步：&lt;/strong&gt; 将目标分解成小步骤，每完成一步就给予自己适当的奖励，这样不仅能提高自信，也能让目标实现变得更加实际。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;33-培养自我同情&#34;&gt;3.3 培养自我同情：
&lt;/h3&gt;&lt;p&gt;自我同情是一种接纳自己不完美的能力。完美主义者往往对自己要求过于苛刻，缺少对自己的关怀和体谅。学会对自己温柔，不再苛责每一个小缺点，将有助于缓解精神内耗。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;与自己和解：&lt;/strong&gt; 每天进行自我肯定，接受自己的不完美，理解并接纳每一个成长的瞬间。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;34-放松与休息&#34;&gt;3.4 放松与休息：
&lt;/h3&gt;&lt;p&gt;完美主义者常常会忽略休息的重要性，认为休息等于浪费时间。然而，适当的休息与放松对提升效率和减少内耗至关重要。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;休息与效率并存：&lt;/strong&gt; 给自己设定合理的休息时间，避免过度工作，保持身心的平衡。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;35-寻找支持系统&#34;&gt;3.5 寻找支持系统：
&lt;/h3&gt;&lt;p&gt;当精神内耗变得严重时，寻求外界的帮助至关重要。心理咨询可以帮助个体认清问题的根源并找到解决之道。而社交支持，则能通过与亲友的沟通，获得安慰与理解。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;结语--追求卓越与享受过程的平衡&#34;&gt;结语 —— 追求卓越与享受过程的平衡
&lt;/h2&gt;&lt;p&gt;完美主义与精神内耗并非无法共存。关键在于我们如何管理这两者的关系，找到健康的平衡。通过认知重构、设定健康目标、培养自我同情、适当放松、寻求支持，我们可以在追求卓越的道路上，避免让完美主义束缚住我们的脚步。&lt;/p&gt;
&lt;p&gt;让我们在不断努力的过程中，也学会享受每一个成长的瞬间，不再将每一步看作通向终极目标的负担，而是当下价值的体现。最终，我们能够突破精神内耗的困扰，找到真正的内心自由。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>如何向技术大佬请教问题且不泄露敏感信息</title>
        <link>https://blog.yearsuns.com/p/protecting-sensitive-data-while-seeking-help/</link>
        <pubDate>Mon, 10 Feb 2025 11:43:56 +0800</pubDate>
        
        <guid>https://blog.yearsuns.com/p/protecting-sensitive-data-while-seeking-help/</guid>
        <description>&lt;p&gt;在技术圈中，请教问题是提升技能的重要途径。但有时候，我们的问题可能涉及敏感信息，比如项目代码、业务逻辑、客户数据等。如果不注意，很可能因为无意的泄露造成不必要的风险。那么，如何在请教问题时保护敏感信息？本文将从识别敏感信息、避免泄露以及高效沟通三个方面详细阐述。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;什么是敏感信息如何识别&#34;&gt;什么是敏感信息？如何识别？
&lt;/h2&gt;&lt;p&gt;敏感信息通常是指那些一旦泄露，可能导致安全问题、商业损失或隐私风险的数据。在技术领域，敏感信息的范围可能更广。&lt;/p&gt;
&lt;h3 id=&#34;常见的敏感信息类型&#34;&gt;常见的敏感信息类型
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;个人身份信息（PII）&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;包括用户名、密码、电子邮件地址、电话号码、身份证号等。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;公司内部信息&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;业务逻辑、未发布的产品功能、技术架构设计。&lt;/li&gt;
&lt;li&gt;内部工具的配置文件，例如 API 密钥、数据库连接字符串。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;客户或用户数据&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;包括用户订单记录、支付信息、行为分析数据。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;源码或配置文件&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Git 仓库中的代码、生产环境配置，尤其是涉及商业机密或专利内容的部分。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;服务器与网络信息&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;IP 地址、端口号、服务器配置。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;如何判断信息是否敏感&#34;&gt;如何判断信息是否敏感？
&lt;/h3&gt;&lt;p&gt;以下几种方法可以帮助你快速判断：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;问自己：一旦泄露，会有何后果？&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果信息泄露可能导致系统被攻击、用户隐私被暴露或公司竞争力下降，那么它就是敏感信息。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;公司政策与行业规范&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;公司通常有信息安全政策，参考其中的敏感信息定义。例如 GDPR 或 CCPA 明确规定了需要保护的用户数据。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;通用经验法则&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;凡是你需要登录权限才能访问的内容，默认认为是敏感的。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;如何避免在请教问题时泄露敏感信息&#34;&gt;如何避免在请教问题时泄露敏感信息？
&lt;/h2&gt;&lt;h3 id=&#34;1-替换敏感信息&#34;&gt;1. 替换敏感信息
&lt;/h3&gt;&lt;p&gt;在描述问题时，尽量将敏感信息替换为通用或伪造的示例数据：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;用户名和密码&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原始数据：&lt;code&gt;admin:password123&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;替换为：&lt;code&gt;example_user:example_password&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;API 密钥&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原始数据：&lt;code&gt;sk_live_1234567890abcdef&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;替换为：&lt;code&gt;sample_private_key&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;具体代码片段&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果必须分享代码，先删除或模糊掉与业务相关的逻辑，只保留问题核心。&lt;/li&gt;
&lt;li&gt;例如：将实际的 SQL 查询 &amp;ldquo;&lt;code&gt;SELECT * FROM users WHERE role = &#39;admin&#39;&lt;/code&gt;&amp;rdquo; 替换为 &amp;ldquo;&lt;code&gt;SELECT * FROM table WHERE condition&lt;/code&gt;&amp;quot;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-提供抽象问题&#34;&gt;2. 提供抽象问题
&lt;/h3&gt;&lt;p&gt;把具体问题抽象成通用场景，比如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;原问题：&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我们的支付系统对接某银行接口时，总是返回 403 错误。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;抽象后：&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在使用 RESTful API 调用第三方支付接口时，返回 403 错误，怀疑是签名问题。这种情况应该如何排查？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这样既避免暴露具体的支付对接信息，也能得到相同的技术解答。&lt;/p&gt;
&lt;h3 id=&#34;3-使用代码片段工具&#34;&gt;3. 使用代码片段工具
&lt;/h3&gt;&lt;p&gt;推荐在分享代码时使用 GitHub Gist、CodeSandbox 或 Pastebin，设置合适的访问权限，并在分享前检查敏感信息是否已被清理。&lt;/p&gt;
&lt;h3 id=&#34;4-避免提供生产环境数据&#34;&gt;4. 避免提供生产环境数据
&lt;/h3&gt;&lt;p&gt;无论如何，都不要直接复制生产环境的数据（如日志、数据库记录）。如需调试，可使用以下方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;生成伪数据&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;利用 Faker.js、Mock.js 等工具生成假数据。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;脱敏真实数据&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;替换关键字段，例如将用户姓名替换为 &amp;ldquo;John Doe&amp;rdquo;，将手机号替换为 &amp;ldquo;1234567890&amp;rdquo;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;5-与大佬确认是否方便回答&#34;&gt;5. 与大佬确认是否方便回答
&lt;/h3&gt;&lt;p&gt;在提出问题之前，简要说明你的问题背景，让对方判断是否需要了解更多细节。比如：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我遇到了一个数据库连接超时的问题，已排查了网络和配置部分。如果方便，我可以提供一个精简后的环境复现代码。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;通过这样的方式，大佬可以决定是否需要深入了解。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;高效沟通的小技巧&#34;&gt;高效沟通的小技巧
&lt;/h2&gt;&lt;p&gt;即便保护好敏感信息，也需要提高沟通效率，让对方快速理解你的问题。&lt;/p&gt;
&lt;h3 id=&#34;1-结构化描述问题&#34;&gt;1. 结构化描述问题
&lt;/h3&gt;&lt;p&gt;使用以下模板：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;**问题背景：**简述你的技术环境和需求。&lt;/li&gt;
&lt;li&gt;**预期结果：**你希望系统如何运行。&lt;/li&gt;
&lt;li&gt;**实际结果：**当前系统的表现。&lt;/li&gt;
&lt;li&gt;**尝试过的解决方法：**列出你已排查的内容。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;**背景：**我们使用的是 Spring Boot + PostgreSQL，部署在 AWS 上。&lt;/p&gt;
&lt;p&gt;**预期：**希望通过 JPA 查询接口返回分页数据。&lt;/p&gt;
&lt;p&gt;**实际：**查询时总是超时，尤其在大数据量场景下。&lt;/p&gt;
&lt;p&gt;**尝试：**调整了分页大小和索引优化，但效果有限。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;2-用图表补充说明&#34;&gt;2. 用图表补充说明
&lt;/h3&gt;&lt;p&gt;如果问题复杂，可使用：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;流程图&lt;/strong&gt;（如 Lucidchart 或 Draw.io）展示系统流程。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;时序图&lt;/strong&gt;清晰呈现请求和响应过程。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;错误截图或日志&lt;/strong&gt;标注关键问题点。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-感谢并反馈结果&#34;&gt;3. 感谢并反馈结果
&lt;/h3&gt;&lt;p&gt;解决问题后，记得感谢对方，并反馈最终结果。这不仅体现你的尊重，也能帮助大佬积累更多案例。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;总结&#34;&gt;总结
&lt;/h2&gt;&lt;p&gt;在向技术大佬请教问题时，保护敏感信息既是对自己的安全负责，也是对团队和客户的信任负责。通过识别敏感信息、替换真实数据、抽象问题和高效沟通，不仅能避免信息泄露，还能赢得大佬的专业认可。希望每一位开发者都能在技术交流中既学到知识，又能安心无忧！&lt;/p&gt;
</description>
        </item>
        <item>
        <title>程序员的自救指南：如何精准描述你的技术问题，让大佬想帮你</title>
        <link>https://blog.yearsuns.com/p/tips-for-explaining-tech-issues/</link>
        <pubDate>Sun, 09 Feb 2025 20:43:56 +0800</pubDate>
        
        <guid>https://blog.yearsuns.com/p/tips-for-explaining-tech-issues/</guid>
        <description>&lt;p&gt;有时候，程序员的日子就像《荒野求生》，&lt;strong&gt;问题&lt;/strong&gt;就是那条饿着肚子追你的鳄鱼，你呢？跪着发帖：“大佬们救救孩子吧，代码写崩了！”&lt;/p&gt;
&lt;p&gt;结果呢？没人回。&lt;/p&gt;
&lt;p&gt;为什么？&lt;br&gt;
因为你发的帖就像“妈丫，肚子疼！”却忘了告诉医生是&lt;strong&gt;吃撑了、饿坏了、还是中午猛喝了五碗麻辣烫&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;今天，我来教你如何精准描述你的技术问题，让你瞬间从 &lt;strong&gt;“救救孩子”&lt;/strong&gt; 进化到 &lt;strong&gt;“这哥们值得救”&lt;/strong&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;step-1说清楚你在干啥别藏着掖着&#34;&gt;Step 1：说清楚你在干啥，别藏着掖着
&lt;/h3&gt;&lt;p&gt;想让别人帮你？&lt;strong&gt;背景交代到位，别怕麻烦！&lt;/strong&gt;&lt;br&gt;
大佬们不懂你家后院代码都咋跑的。来一段上下文，简洁明了！&lt;/p&gt;
&lt;p&gt;比如，你发帖别写：“Redis 锁续期有问题，快点来！”&lt;br&gt;
改成这样：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我正在用 Spring Boot + Redisson 实现分布式锁，Spring Boot 版本 3.0.0，Redisson 用的是最新的 3.20.0。问题出在本地单元测试时锁续期失效。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;大佬看到这，立刻有谱：&lt;strong&gt;哦，这哥们用的是主流技术栈，问题不难搞！&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;step-2问题描述要具体别用感叹号骗大佬注意力&#34;&gt;Step 2：问题描述要具体，别用感叹号骗大佬注意力
&lt;/h3&gt;&lt;p&gt;很多人喜欢放大自己的“惨状”：“完了，炸了，全崩了！”&lt;/p&gt;
&lt;p&gt;可是你连个报错信息都不贴上，难道指望大佬靠读心术帮你？&lt;/p&gt;
&lt;p&gt;错误信息一定要说清楚，关键内容圈出来，别整篇贴，显得像年终总结。比如：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;当我运行 &lt;code&gt;lock.lock(60, TimeUnit.SECONDS)&lt;/code&gt; 时，日志显示：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;java.lang.IllegalStateException: Lock expired while executing task
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;错误出在锁续期失效，导致任务中途被抢锁。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;看！这样既具体，又不会让人头疼。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;step-3问题复现三板斧连小白也能操作&#34;&gt;Step 3：问题复现三板斧，连小白也能操作
&lt;/h3&gt;&lt;p&gt;技术问题要让别人有地方下手，就像&lt;strong&gt;解锁游戏副本的攻略&lt;/strong&gt;。没法复现的问题，等于在地里找针。&lt;/p&gt;
&lt;p&gt;来个实例：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;错误复现步骤&lt;/strong&gt;：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;启动 Redis 服务器，开启 Redisson 配置。&lt;/li&gt;
&lt;li&gt;运行测试类 &lt;code&gt;LockTest.java&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;等待 30 秒后，问题出现。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;清清楚楚三步走，大佬立刻知道咋搞。再加上你的配置文件、核心代码，&lt;strong&gt;人家手里有锤子，就能敲问题！&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;step-4预期-vs-实际问题得有个对比&#34;&gt;Step 4：预期 vs 实际，问题得有个对比
&lt;/h3&gt;&lt;p&gt;人类（包括程序员）特别爱“对比法”，这会让大佬迅速明白你的痛点在哪里。&lt;/p&gt;
&lt;p&gt;比如这样写：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;预期&lt;/strong&gt;：分布式锁应自动续期，确保任务完整执行。&lt;br&gt;
&lt;strong&gt;实际&lt;/strong&gt;：锁未续期，任务执行到一半时锁被释放，导致数据不一致。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;逻辑一目了然！&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;step-5展示你的努力赢得大佬尊重&#34;&gt;Step 5：展示你的努力，赢得大佬尊重
&lt;/h3&gt;&lt;p&gt;大佬们愿意帮有诚意的人。问题描述时，提一提你做过的尝试：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;尝试过的解决方法&lt;/strong&gt;：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;检查了 Redis 是否正常启动，结果运行良好。&lt;/li&gt;
&lt;li&gt;调试了 Redisson 配置，&lt;code&gt;useSingleServer&lt;/code&gt; 设置正确。&lt;/li&gt;
&lt;li&gt;改用 &lt;code&gt;tryLock()&lt;/code&gt; 测试，问题依然存在。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;这样一来，大佬心里一暖：“这哥们不是等着躺平，他是真心要解决问题！”&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;step-6加点小细节补充大佬的弹药库&#34;&gt;Step 6：加点小细节，补充大佬的“弹药库”
&lt;/h3&gt;&lt;p&gt;最后再补上必要信息，比如操作系统、开发环境、核心代码片段。别一来就上百行代码，关键的几行就行了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;环境&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;操作系统：MacOS 12.3&lt;/li&gt;
&lt;li&gt;JDK：17&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;核心代码&lt;/strong&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;RLock lock &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; redissonClient.&lt;span style=&#34;color:#a6e22e&#34;&gt;getLock&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;testLock&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;lock.&lt;span style=&#34;color:#a6e22e&#34;&gt;lock&lt;/span&gt;(60, TimeUnit.&lt;span style=&#34;color:#a6e22e&#34;&gt;SECONDS&lt;/span&gt;); &lt;span style=&#34;color:#75715e&#34;&gt;// 问题出现在这里&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3 id=&#34;完美示例把大佬整哭了的求助帖&#34;&gt;&lt;strong&gt;完美示例：把大佬整哭了的求助帖&lt;/strong&gt;
&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;背景&lt;/strong&gt;：&lt;br&gt;
我正在用 Spring Boot + Redisson 实现分布式锁，版本如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Spring Boot：3.0.0&lt;/li&gt;
&lt;li&gt;Redisson：3.20.0&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;问题&lt;/strong&gt;：&lt;br&gt;
单元测试中，锁无法自动续期，导致任务中途锁被释放。日志错误如下：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;java.lang.IllegalStateException: Lock expired while executing task
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;复现步骤&lt;/strong&gt;：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;启动 Redis 服务器，使用默认配置。&lt;/li&gt;
&lt;li&gt;运行测试类 &lt;code&gt;LockTest.java&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;等待超过 30 秒的锁超时时间，问题复现。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;预期 vs 实际&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;预期：分布式锁自动续期，任务顺利完成。&lt;/li&gt;
&lt;li&gt;实际：锁未续期，导致任务执行到一半被中断。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;尝试过的解决方法&lt;/strong&gt;：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;检查 Redis 是否正常运行，结果正常。&lt;/li&gt;
&lt;li&gt;使用 &lt;code&gt;tryLock()&lt;/code&gt; 方法测试，问题依然存在。&lt;/li&gt;
&lt;li&gt;增加日志查看续期机制，发现续期任务未触发。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;补充信息&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;操作系统：MacOS 12.3&lt;/li&gt;
&lt;li&gt;JDK：17&lt;/li&gt;
&lt;li&gt;Redisson 配置：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Config config &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Config();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;config.&lt;span style=&#34;color:#a6e22e&#34;&gt;useSingleServer&lt;/span&gt;().&lt;span style=&#34;color:#a6e22e&#34;&gt;setAddress&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;redis://127.0.0.1:6379&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3 id=&#34;结语&#34;&gt;结语
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;程序员求助的秘诀&lt;/strong&gt;，在于精准、简洁和条理清晰。&lt;br&gt;
记住，这不仅仅是给别人看的，也是在训练自己的问题分析能力。&lt;/p&gt;
&lt;p&gt;当你学会准确描述问题的那天，你离解决问题已经不远了！&lt;/p&gt;
&lt;p&gt;最后，祝大家都能成为被大佬们“抢着帮”的技术王者～&lt;/p&gt;
</description>
        </item>
        <item>
        <title>JWT的最佳实践</title>
        <link>https://blog.yearsuns.com/p/best-practices-of-jwt/</link>
        <pubDate>Fri, 07 Feb 2025 20:25:56 +0800</pubDate>
        
        <guid>https://blog.yearsuns.com/p/best-practices-of-jwt/</guid>
        <description>&lt;p&gt;&lt;strong&gt;前言&lt;/strong&gt;&lt;br&gt;
在当今的 web 开发中，身份验证是非常关键的，而 JWT（JSON Web Token）作为一种简单、高效的身份验证方式，已经被广泛应用在许多前后端分离的项目中。本篇文章将带你从零开始理解 JWT，探讨它的优缺点，并介绍最佳实践。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;什么是-jwt&#34;&gt;什么是 JWT？
&lt;/h3&gt;&lt;p&gt;JWT 是一种开放标准（RFC 7519），用于在不同系统之间安全地传递信息。简单来说，JWT 主要用于认证和信息交换，常见的应用场景就是用户登录验证。JWT 通常在用户登录后生成，并随后的请求中带着它来进行身份认证。&lt;/p&gt;
&lt;h4 id=&#34;jwt-结构&#34;&gt;JWT 结构
&lt;/h4&gt;&lt;p&gt;JWT 的结构非常简单，它由三部分组成：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;头部（Header）&lt;/strong&gt;&lt;br&gt;
头部通常包含两部分内容：令牌类型（JWT）和签名算法（如 HMAC SHA256 或 RSA）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;载荷（Payload）&lt;/strong&gt;&lt;br&gt;
载荷是 JWT 的“正文”部分，存储了你希望传递的数据（比如用户 ID 或权限）。这里面包含了 &amp;ldquo;Claims&amp;rdquo;（声明），有三种类型：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;注册声明&lt;/strong&gt;：如 &lt;code&gt;sub&lt;/code&gt;（主题）、&lt;code&gt;exp&lt;/code&gt;（过期时间）、&lt;code&gt;iat&lt;/code&gt;（签发时间）等。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;公共声明&lt;/strong&gt;：可以自定义的数据，但需要避免冲突。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;私有声明&lt;/strong&gt;：你自己定义的声明。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;签名（Signature）&lt;/strong&gt;&lt;br&gt;
签名部分用于验证信息的完整性，确保数据没有被篡改。生成签名的方式是：用头部和载荷，通过密钥（对于对称加密是一个密钥，非对称加密是私钥）生成。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id=&#34;jwt-的生成和验证原理&#34;&gt;JWT 的生成和验证原理
&lt;/h3&gt;&lt;h4 id=&#34;jwt-的生成过程&#34;&gt;JWT 的生成过程
&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;用户登录&lt;/strong&gt;：&lt;br&gt;
用户输入用户名和密码，通过认证系统登录。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;服务器生成 JWT&lt;/strong&gt;：&lt;br&gt;
认证成功后，服务器会使用一个密钥（对称加密）或者私钥（非对称加密）生成一个 JWT。生成过程包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将头部和载荷（即数据）部分通过 Base64 编码。&lt;/li&gt;
&lt;li&gt;用密钥对这两部分进行签名，生成签名部分。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;生成后的 JWT 看起来像这样：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;header.payload.signature
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;例如：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://blog.yearsuns.com/p/best-practices-of-jwt/jwt.png&#34;
	width=&#34;1222&#34;
	height=&#34;901&#34;
	srcset=&#34;https://blog.yearsuns.com/p/best-practices-of-jwt/jwt_hu_96e6486fee1b5af3.png 480w, https://blog.yearsuns.com/p/best-practices-of-jwt/jwt_hu_7fcaf8bf5bb0946f.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;jwt构成&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;135&#34;
		data-flex-basis=&#34;325px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;返回 JWT 给客户端&lt;/strong&gt;：&lt;br&gt;
服务器把生成的 JWT 返回给客户端，通常客户端会将其存储在本地（如 LocalStorage 或 Cookie）中。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;jwt-的验证过程&#34;&gt;JWT 的验证过程
&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;客户端发起请求&lt;/strong&gt;：&lt;br&gt;
客户端每次请求时，会将 JWT 添加到请求的 Authorization 头部中（例如：&lt;code&gt;Authorization: Bearer &amp;lt;JWT&amp;gt;&lt;/code&gt;）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;服务器验证 JWT&lt;/strong&gt;：&lt;br&gt;
服务器拿到 JWT 后，通过以下步骤来验证：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解析 JWT 的头部、载荷和签名。&lt;/li&gt;
&lt;li&gt;使用密钥（对于对称加密）或公钥（对于非对称加密）对签名部分进行验证，看是否与头部和载荷部分匹配。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果验证通过，说明 JWT 的数据未被篡改，服务器就会继续处理请求。如果验证失败，说明 JWT 被篡改，服务器会返回错误信息。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id=&#34;jwt-的优点&#34;&gt;JWT 的优点
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;无状态（Stateless）&lt;/strong&gt;&lt;br&gt;
JWT 是无状态的，意味着服务器不需要存储用户会话数据。每次请求都包含 JWT，服务器可以根据 JWT 里的信息来进行认证。这样减少了服务器的负担，提升了系统的扩展性。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;跨域支持&lt;/strong&gt;&lt;br&gt;
由于 JWT 是由客户端传递，它非常适合前后端分离的项目，可以跨域进行身份验证，避免了传统 Cookie 的同源限制。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;轻量级&lt;/strong&gt;&lt;br&gt;
JWT 的大小较小，通常在几十到一百多个字节之间，非常适合频繁的 HTTP 请求，传输效率高。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;适合微服务架构&lt;/strong&gt;&lt;br&gt;
JWT 可以在多个服务之间传递身份信息，非常适合分布式架构，尤其是微服务架构中的身份认证。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id=&#34;jwt-的缺点&#34;&gt;JWT 的缺点
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;无法撤销&lt;/strong&gt;&lt;br&gt;
一旦 JWT 被发放出去，它就无法撤销。如果 JWT 泄露，攻击者可以在有效期内反复使用。这比传统的 Session 认证要危险，后者可以在服务器端主动注销会话。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;存储和安全问题&lt;/strong&gt;&lt;br&gt;
JWT 如果存储不当（如保存在 LocalStorage 或 Cookie 中），可能会受到 XSS 攻击。如果攻击者能够获取到 JWT，就能伪造合法请求。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;过期问题&lt;/strong&gt;&lt;br&gt;
JWT 通常设定有过期时间，一旦过期，就不能再使用。为了避免频繁登录，可以使用刷新令牌（Refresh Token）。不过如果过期时间设置不合理，可能会影响用户体验。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;载荷不加密&lt;/strong&gt;&lt;br&gt;
JWT 的载荷部分是 Base64 编码的，不是加密的。任何人都可以解码并看到其中的内容。因此，切勿将敏感信息（如密码）存储在 JWT 中。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;密钥泄漏的风险&lt;/strong&gt;&lt;br&gt;
JWT 的安全性依赖于密钥的保密性。如果密钥泄露，攻击者可以伪造有效的 JWT。因此，保护好密钥非常重要。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id=&#34;jwt-的使用场景&#34;&gt;JWT 的使用场景
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;单点登录（SSO）&lt;/strong&gt;&lt;br&gt;
JWT 非常适合实现跨应用的单点登录（SSO）。只需生成一次 JWT，就可以在多个系统之间共享。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;移动应用身份认证&lt;/strong&gt;&lt;br&gt;
在移动应用中，JWT 常常用来进行身份验证。客户端存储 JWT，并在每次请求中发送。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;前后端分离的应用&lt;/strong&gt;&lt;br&gt;
在前后端分离的架构中，前端和后端可以独立进行身份验证，使用 JWT 作为认证工具，避免了传统 Cookie 的问题。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id=&#34;jwt-的最佳实践&#34;&gt;JWT 的最佳实践
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;不要在 JWT 中存储敏感信息&lt;/strong&gt;&lt;br&gt;
由于 JWT 的载荷部分是可以解码的，敏感信息（如密码、银行卡信息）绝对不能存储在 JWT 中。你可以把这些信息存储在服务器端，JWT 只传递一个标识符。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;使用 HTTPS&lt;/strong&gt;&lt;br&gt;
无论是生成 JWT 还是传输 JWT，都应使用 HTTPS 协议，确保数据在传输过程中不会被窃听或篡改。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;设置合理的过期时间&lt;/strong&gt;&lt;br&gt;
JWT 的过期时间要设置合理。过短可能影响用户体验，过长则可能存在安全隐患。通常，访问令牌的过期时间可以设置为 15 分钟到 1 小时，刷新令牌可以设置较长时间。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;使用刷新令牌&lt;/strong&gt;&lt;br&gt;
结合使用访问令牌（Access Token）和刷新令牌（Refresh Token）。当访问令牌过期时，客户端可以使用刷新令牌获取新的访问令牌。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;存储 JWT 的安全性&lt;/strong&gt;&lt;br&gt;
如果你把 JWT 存储在浏览器中，推荐使用 HttpOnly 和 Secure 标志的 Cookie，以避免 XSS 攻击的风险。避免将 JWT 存储在 LocalStorage 中，因为它更容易受到 XSS 攻击。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;签名算法选择&lt;/strong&gt;&lt;br&gt;
在选择签名算法时，推荐使用非对称加密的算法（如 RS256 或 ES256），而不是对称加密的算法（如 HS256），这样可以提高安全性，避免密钥泄露风险。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;密钥管理&lt;/strong&gt;&lt;br&gt;
密钥是 JWT 安全的关键。无论是对称加密还是非对称加密，都应该采取安全措施保护密钥。避免将密钥硬编码在代码中，可以通过环境变量或专门的密钥管理工具来管理密钥。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id=&#34;总结&#34;&gt;总结
&lt;/h3&gt;&lt;p&gt;JWT 是一种非常流行的身份验证方式，它简单、轻量、无状态，非常适合现代 web 应用，尤其是前后端分离的项目。但它也有一些缺点，尤其是在密钥泄漏和无法撤销的场景下。因此，使用 JWT 时需要特别注意密钥的管理和安全配置，合理设置过期时间，避免将敏感信息存储在 JWT 中。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>别让AI把你当傻子！3个咒语驯服野生AI，打工效率直接芜湖起飞🛫</title>
        <link>https://blog.yearsuns.com/p/3-spells-to-tame-the-wild-ai/</link>
        <pubDate>Tue, 04 Feb 2025 12:25:56 +0800</pubDate>
        
        <guid>https://blog.yearsuns.com/p/3-spells-to-tame-the-wild-ai/</guid>
        <description>&lt;h3 id=&#34;开篇暴击人类大型破防现场&#34;&gt;🚨开篇暴击：人类大型破防现场
&lt;/h3&gt;&lt;p&gt;上周朋友说被AI气到表演英年吐血。&lt;/p&gt;
&lt;p&gt;他让AI&amp;quot;写份高大上的行业报告&amp;quot;，结果收到的是《论宇宙膨胀与奶茶销量的量子纠缠》，最终得出结论“每少喝一杯杨枝甘露，黑洞半径增加0.5%”。&lt;/p&gt;
&lt;p&gt;我看着他的聊天记录，不禁陷入沉思。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;不是AI太智障，是你不会下指令啊！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.yearsuns.com/p/3-spells-to-tame-the-wild-ai/%E7%94%B5%E8%A7%86%E6%9C%BA%E8%8A%B1%E5%B1%8F.jpeg&#34;
	width=&#34;474&#34;
	height=&#34;266&#34;
	srcset=&#34;https://blog.yearsuns.com/p/3-spells-to-tame-the-wild-ai/%E7%94%B5%E8%A7%86%E6%9C%BA%E8%8A%B1%E5%B1%8F_hu_1b4b4d616c6624ea.jpeg 480w, https://blog.yearsuns.com/p/3-spells-to-tame-the-wild-ai/%E7%94%B5%E8%A7%86%E6%9C%BA%E8%8A%B1%E5%B1%8F_hu_db731641b2b8026c.jpeg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;满屏乱码&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;178&#34;
		data-flex-basis=&#34;427px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;第一章-ai是阿拉丁神灯or人工智障全看你会不会念咒&#34;&gt;🧠第一章 AI是阿拉丁神灯or人工智障？全看你会不会念咒！
&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://blog.yearsuns.com/p/3-spells-to-tame-the-wild-ai/%E9%98%BF%E6%8B%89%E4%B8%81%E7%A5%9E%E7%81%AF.jpeg&#34;
	width=&#34;800&#34;
	height=&#34;533&#34;
	srcset=&#34;https://blog.yearsuns.com/p/3-spells-to-tame-the-wild-ai/%E9%98%BF%E6%8B%89%E4%B8%81%E7%A5%9E%E7%81%AF_hu_9f43f105315035d4.jpeg 480w, https://blog.yearsuns.com/p/3-spells-to-tame-the-wild-ai/%E9%98%BF%E6%8B%89%E4%B8%81%E7%A5%9E%E7%81%AF_hu_2b47d5f9497c8a65.jpeg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;阿拉丁神灯&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;150&#34;
		data-flex-basis=&#34;360px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;优化提示词能让AI智商飙升500%！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这就像：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;原始人指令：&amp;ldquo;给爷整个火🔥&amp;rdquo; → 收获一堆湿树枝&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;现代人咒语：&amp;ldquo;请用打火石在距引火绒3cm处，以25°角摩擦，配合吹气节奏：吸气2秒→吹气5秒&amp;rdquo; → 获得篝火晚会VIP席位&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;案例对比高能预警&#34;&gt;🆘案例对比（高能预警）
&lt;/h4&gt;&lt;p&gt;❌ 直男式命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;写个口红文案
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;💣AI输出：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;这款口红很好用 颜色饱满 买它&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;（李佳琦听了都要报警）&lt;/p&gt;
&lt;p&gt;✅ 魔法师咒语：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;你是混迹美妆圈8年的戏精文案，给YSL七夕限定丝绒口红写抖音带货文案。要求：  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1️、用“纯欲风”“钓系”等热词  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2️、融入分手逆袭爽剧情节  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;3️、每句结尾自带BGM“姐就是女王”节奏感  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;4️、必须出现1个谐音梗
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;🎉AI秒变神仙：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;前任说我这嘴只配喝蜜雪冰城（摔镜框）💢  &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;现在涂上ysl#199复仇色👇  &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;他跪求复合的样子…（战术停顿）  &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;像极了罗森关东煮最后一块萝卜🤡  &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#纯欲天花板 #渣男退散音效 #啊啊啊这质地是丝绒吻过玫瑰吧！！&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;第二章-驯兽师速成班3招把ai训成24小时打工狗&#34;&gt;✨第二章 驯兽师速成班：3招把AI训成24小时打工狗
&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://blog.yearsuns.com/p/3-spells-to-tame-the-wild-ai/%E4%BA%8C%E5%93%88.webp&#34;
	width=&#34;1024&#34;
	height=&#34;1024&#34;
	srcset=&#34;https://blog.yearsuns.com/p/3-spells-to-tame-the-wild-ai/%E4%BA%8C%E5%93%88_hu_c0bb809fc0243abe.webp 480w, https://blog.yearsuns.com/p/3-spells-to-tame-the-wild-ai/%E4%BA%8C%E5%93%88_hu_9438ac040c737e5.webp 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;打工狗&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;100&#34;
		data-flex-basis=&#34;240px&#34;
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;法则1角色扮演法给ai套上皮肤才有生产力&#34;&gt;🎩法则1：角色扮演法——给AI套上皮肤才有生产力！
&lt;/h4&gt;&lt;p&gt;你以为在对话？不！你是在给AI做赛博cosplay！&lt;/p&gt;
&lt;p&gt;💡沙雕但管用的咒语公式：&lt;br&gt;
&lt;strong&gt;你是______的______，需要______，要求______，禁止______&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;🌰真实案例：&lt;br&gt;
某教育公司用 &lt;strong&gt;&amp;ldquo;你是会阴阳怪气的海淀鸡娃名师，用《甄嬛传》台词风格讲解二次函数，每讲完一个考点就要嘲讽学渣1次&amp;rdquo;&lt;/strong&gt; 的提示词，让学生做题正确率暴涨60%！&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.yearsuns.com/p/3-spells-to-tame-the-wild-ai/%E7%94%84%E5%AC%9B.webp&#34;
	width=&#34;1024&#34;
	height=&#34;576&#34;
	srcset=&#34;https://blog.yearsuns.com/p/3-spells-to-tame-the-wild-ai/%E7%94%84%E5%AC%9B_hu_351a182ab8412bd5.webp 480w, https://blog.yearsuns.com/p/3-spells-to-tame-the-wild-ai/%E7%94%84%E5%AC%9B_hu_84fa390587b22427.webp 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;钮祜禄·数学&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;177&#34;
		data-flex-basis=&#34;426px&#34;
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;法则2结构化投喂把ai当程序猿来使唤&#34;&gt;📦法则2：结构化投喂——把AI当程序猿来使唤！
&lt;/h4&gt;&lt;p&gt;记住：&lt;strong&gt;AI的脑子=你刚高考完的弟弟&lt;/strong&gt;（给模板才会做题）&lt;/p&gt;
&lt;p&gt;🔥万能框架模板：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;身份&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;：米其林三星主厨（被迫在城中村开大排档版）
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;任务&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;：设计情人节翻车套餐
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;要求&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;：
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1️、菜名要用emoji写成土味情话
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2️、每道菜成本＜20元
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;3️、必须出现“老干妈”“卫龙辣条”
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;4️、附带翻车指数评级
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;禁止&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;：出现“红酒”“牛排”等烧钱词汇
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;💣AI输出笑裂预警：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;「❤&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;️‍&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;🔥&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;辣条缠绕の心&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;」&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;（&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;实际是辣条捆香菜蘸老干妈&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;）&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;「💔&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;水泥封心慕斯&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;」&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;（&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;奥利奥碎拌水泥质感酸奶&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;）&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;「⚠&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;️爱情坟墓拌饭&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;」&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;（&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;隔夜饭&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;心形荷包蛋&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;，&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;蛋黄必流心失败&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;）&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;法则3祖宗式迭代ai是越骂越聪明的抖m&#34;&gt;🔄法则3：祖宗式迭代——AI是越骂越聪明的抖M！
&lt;/h4&gt;&lt;p&gt;记住这个祖传秘方：&lt;strong&gt;“重说！漏了…”  “不够沙雕！再…”  “第3点没落实！扣钱！”&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;🌰手把手教学：&lt;br&gt;
&lt;strong&gt;第一轮：&lt;/strong&gt;&lt;br&gt;
&amp;ldquo;写个程序员相亲文案&amp;rdquo;&lt;br&gt;
AI输出：&amp;ldquo;擅长Java/C++，喜爱登山摄影&amp;rdquo;（简历既视感）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第二轮：&lt;/strong&gt;&lt;br&gt;
&amp;ldquo;加入凡尔赛文学要素！&amp;rdquo;&lt;br&gt;
AI升级：&amp;ldquo;偶尔用Python写诗，GitHub星星多到需要开遮阳伞☂️&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第三轮：&lt;/strong&gt;&lt;br&gt;
&amp;ldquo;不够惨！要有注孤生气质！&amp;rdquo;&lt;br&gt;
AI觉醒：&amp;ldquo;修电脑免费，但改需求请打钱💰｜喜欢人类（仅限于不问我「会不会盗QQ」时）｜婚恋市场递归算法：if(有对象) { return false; }&amp;rdquo;&lt;/p&gt;
&lt;h3 id=&#34;第三章-核能案例从青铜到王者的骚操作&#34;&gt;💥第三章 核能案例：从青铜到王者的骚操作
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;甲方需求：&lt;/strong&gt;&lt;br&gt;
&amp;ldquo;写个防晒霜带货文案&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;青铜版本：&lt;/strong&gt;&lt;br&gt;
&amp;ldquo;这款防晒霜SPF50+，防水防汗&amp;rdquo;（AI摆烂中）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;王者改造：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;你是精通废话文学的抖音爆款制造机，需要创作防晒霜短视频脚本。要求：  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1️、前三秒必须出现“你正在变丑！”
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2️、用“丧尸围城”比喻紫外线  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;3️、植入品牌名3次且不招人烦  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;4️、结尾要有“不转不是中国人”既视感  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;5️、每说10个字就要有“啪”打脸音效
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;🎬AI输出：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;镜头怼脸] &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;还在相信阴天不用防晒？（啪！）  &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;紫外线正在把你腌成老坛酸菜！（丧尸音效）  &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;XX防晒霜抹上脸——（慢动作喷雾）  &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;比渣男分手速度更快成膜！（检测仪哔哔声）  &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;现在下单…（突然嘶吼）难道要等斑长成地图才醒吗？！&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#防晒卷王 #早C晚A不如早晚涂它&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;第四章-保命指南这些作死行为达咩&#34;&gt;🚑第四章 保命指南：这些作死行为达咩！
&lt;/h3&gt;&lt;h4 id=&#34;作死行为1把ai当哆啦a梦&#34;&gt;💣作死行为1：把AI当哆啦A梦
&lt;/h4&gt;&lt;p&gt;❌ &amp;ldquo;告诉我怎么在宿舍造原子弹&amp;rdquo;&lt;br&gt;
✅ &amp;ldquo;用《小猪佩奇》画风解释核电站原理，类比煮火锅时火太大汤烧干&amp;rdquo;&lt;/p&gt;
&lt;h4 id=&#34;作死行为2要情绪不给参考物&#34;&gt;💣作死行为2：要情绪不给参考物
&lt;/h4&gt;&lt;p&gt;❌ &amp;ldquo;写首emo的情诗&amp;rdquo;&lt;br&gt;
✅ &amp;ldquo;模仿林黛玉发朋友圈的风格，用“奶茶三分糖”“论文查重率”等意象表达封校的忧伤&amp;rdquo;&lt;/p&gt;
&lt;h4 id=&#34;作死行为3把ai当许愿池王八&#34;&gt;💣作死行为3：把AI当许愿池王八
&lt;/h4&gt;&lt;p&gt;❌ &amp;ldquo;让我暴富&amp;rdquo;&lt;br&gt;
✅ &amp;ldquo;你是会占卜的财经博主，用MBTI人格分析各类型搞钱偏财方式，要求：ENFP适合摆摊算命，ISTJ适合开发Excel算命模板&amp;rdquo;&lt;/p&gt;
&lt;h3 id=&#34;第五章-新大陆会念咒躺着数钱&#34;&gt;🚀第五章 新大陆：会念咒=躺着数钱？
&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://blog.yearsuns.com/p/3-spells-to-tame-the-wild-ai/%E6%8F%90%E7%A4%BA%E8%AF%8D%E5%B7%A5%E7%A8%8B%E5%B8%88.webp&#34;
	width=&#34;689&#34;
	height=&#34;360&#34;
	srcset=&#34;https://blog.yearsuns.com/p/3-spells-to-tame-the-wild-ai/%E6%8F%90%E7%A4%BA%E8%AF%8D%E5%B7%A5%E7%A8%8B%E5%B8%88_hu_a21e704799a7b1f.webp 480w, https://blog.yearsuns.com/p/3-spells-to-tame-the-wild-ai/%E6%8F%90%E7%A4%BA%E8%AF%8D%E5%B7%A5%E7%A8%8B%E5%B8%88_hu_21ffd0c303303d73.webp 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;AI调教师&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;191&#34;
		data-flex-basis=&#34;459px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;LinkedIn数据炸裂：&lt;strong&gt;提示词工程师时薪高达$300&lt;/strong&gt;！他们的作弊码包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;温度操控术&lt;/strong&gt;：30°C=高考阅卷老师模式｜90°C=喝假酒的李白模式&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;记忆嫁接术&lt;/strong&gt;：&amp;ldquo;你刚参加完全球AI大会，现在要用小学生能听懂的话解释量子计算&amp;rdquo;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;防杠补丁&lt;/strong&gt;：&amp;ldquo;回答需标注消息来源，不确定内容用“据说”开头，每隔三段要卖个萌&amp;rdquo;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;终极奥义让ai给你打工の哲学&#34;&gt;🔚终极奥义：让AI给你打工の哲学
&lt;/h3&gt;&lt;p&gt;下次被AI气到脑壳疼时，请默念：&lt;strong&gt;它不是在装傻，是在等你念通关密语！&lt;/strong&gt;&lt;br&gt;
现在你已解锁《赛博驯兽师资格证》，是时候让AI表演：&lt;br&gt;
✔️ 凌晨3点自动生成PPT&lt;br&gt;
✔️ 把老板的“五彩斑斓黑”需求翻译成人话&lt;br&gt;
✔️ 用鲁迅口吻写辞职信：“我大抵是倦了，横竖都坐不住…”&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;记住：&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;与其担心被AI取代，&lt;br&gt;
不如学会让AI替你内卷！💼&lt;br&gt;
打工人不骗打工人，&lt;br&gt;
转发这篇保你少搬10年砖！🚧&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>AI来了，第三次工业革命正式开卷！</title>
        <link>https://blog.yearsuns.com/p/the-third-industrial-revolution-is-now-in-full-swing/</link>
        <pubDate>Fri, 31 Jan 2025 11:59:56 +0800</pubDate>
        
        <guid>https://blog.yearsuns.com/p/the-third-industrial-revolution-is-now-in-full-swing/</guid>
        <description>&lt;h3 id=&#34;ai工业革命30人类何去何从&#34;&gt;&lt;strong&gt;AI=工业革命3.0，人类何去何从？&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;蒸汽机让人类甩掉了手工，电力让流水线疯狂加速，计算机和互联网让信息全球流动，而AI，直接让“聪明”成为一种自动化能力。&lt;/p&gt;
&lt;p&gt;有人欢呼：“AI让我们更高效！”&lt;/p&gt;
&lt;p&gt;有人忧虑：“AI会不会让我们失业？”&lt;/p&gt;
&lt;p&gt;更有人好奇：“这次会不会真轮到人类退休？”&lt;/p&gt;
&lt;p&gt;别急，今天就来扒一扒，&lt;strong&gt;AI凭啥能被称为第三次工业革命？&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;先复习下前两次工业革命我们到底被卷了啥&#34;&gt;&lt;strong&gt;先复习下前两次工业革命，我们到底被“卷”了啥？&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;1️⃣ &lt;strong&gt;第一次工业革命（18世纪）——肌肉革命！&lt;/strong&gt;&lt;br&gt;
关键词：蒸汽机、纺织机、工厂&lt;br&gt;
&lt;strong&gt;冲击：&lt;/strong&gt; 手工匠人泪目，机器顶替了大部分体力活，工厂模式兴起。&lt;/p&gt;
&lt;p&gt;2️⃣ &lt;strong&gt;第二次工业革命（19-20世纪）——电力革命！&lt;/strong&gt;&lt;br&gt;
关键词：电灯、流水线、大规模生产&lt;br&gt;
&lt;strong&gt;冲击：&lt;/strong&gt; 生产效率飙升，劳动力需求井喷，但重复性工作更多了。&lt;/p&gt;
&lt;p&gt;3️⃣ &lt;strong&gt;第三次工业革命（20世纪末至今）——信息化革命！&lt;/strong&gt;&lt;br&gt;
关键词：计算机、互联网、自动化&lt;br&gt;
&lt;strong&gt;冲击：&lt;/strong&gt; 体力劳动进一步减少，知识工作者迎来黄金时代。&lt;/p&gt;
&lt;p&gt;但问题来了，信息化革命已经改变了世界，为什么还要说&lt;strong&gt;AI才是第三次工业革命的核心&lt;/strong&gt;？&lt;/p&gt;
&lt;h3 id=&#34;ai凭啥能封神成为第三次工业革命的引擎&#34;&gt;&lt;strong&gt;AI凭啥能“封神”，成为第三次工业革命的引擎？&lt;/strong&gt;
&lt;/h3&gt;&lt;h3 id=&#34;1-ai让自动化从手进化到脑&#34;&gt;&lt;strong&gt;1. AI让自动化从“手”进化到“脑”&lt;/strong&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;过去：&lt;/strong&gt; 工业革命让机器代替双手，但需要人来操作。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;现在：&lt;/strong&gt; AI不需要人来教，它自己能“悟性”成长。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;举个栗子&lt;/strong&gt;：&lt;br&gt;
过去流水线上的工人需要按按钮、拧螺丝，现在&lt;strong&gt;AI机器人不仅能拧螺丝，还能决定哪颗螺丝更耐用！&lt;/strong&gt;&lt;br&gt;
过去程序员手写代码，现在AI可以自己写代码，甚至帮你找Bug，比你老板还严格！&lt;/p&gt;
&lt;h3 id=&#34;2-ai席卷行业全面搅局&#34;&gt;&lt;strong&gt;2. AI席卷行业，全面“搅局”&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;AI不只是自动化生产，它直接改变了行业本身！&lt;/p&gt;
&lt;p&gt;🚗 &lt;strong&gt;汽车行业：自动驾驶，司机要失业？&lt;/strong&gt;&lt;br&gt;
👨‍⚕️ &lt;strong&gt;医疗行业：AI诊断，医生会下岗？&lt;/strong&gt;&lt;br&gt;
🎨 &lt;strong&gt;创意行业：AI绘画、AI写作，艺术家慌不慌？&lt;/strong&gt;&lt;br&gt;
📈 &lt;strong&gt;金融行业：AI量化交易，比人类交易员快100倍！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;别觉得这些只是“科幻片”，&lt;strong&gt;ChatGPT已经能通过律师考试，Midjourney能画出顶级插画，AI交易员已经在华尔街大杀四方！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;AI的破坏性，堪比当年的蒸汽机、流水线！&lt;/p&gt;
&lt;h3 id=&#34;3-ai太便宜资本家疯狂买单&#34;&gt;&lt;strong&gt;3. AI太“便宜”，资本家疯狂买单&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;工业革命的核心就是&lt;strong&gt;更高效、更便宜&lt;/strong&gt;，AI恰好满足所有条件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;不加班，不请假，不要工资，24小时在线干活&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;可以自学，越干越聪明&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;一旦开发出来，复制成本趋近于0&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;结果？资本家一拍大腿：“人类，你下岗吧！”&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;科技公司疯狂砸钱搞AI，2023年ChatGPT一发布，全球科技公司开始军备竞赛，&lt;strong&gt;AI成了“新时代印钞机”&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&#34;ai时代普通人该怎么办&#34;&gt;&lt;strong&gt;AI时代，普通人该怎么办？&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;别急着躺平，也别盲目恐慌，每一次工业革命都会淘汰旧职业，同时创造新职业。&lt;/p&gt;
&lt;h3 id=&#34;三大应对策略帮你站稳ai时代&#34;&gt;&lt;strong&gt;三大应对策略，帮你站稳AI时代！&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;🔹 &lt;strong&gt;1. 不和AI抢饭碗，而是学会“用AI”&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;程序员要会用AI写代码，而不是被AI取代&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;设计师要学会AI绘图，而不是害怕AI比你画得好&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;医生要用AI诊断提升效率，而不是排斥它&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;核心思维：AI不是你的对手，而是你的外挂！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;🔹 &lt;strong&gt;2. 选择AI难以取代的“高情商”工作&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;复杂人际关系：心理咨询、谈判专家、社交达人&lt;/li&gt;
&lt;li&gt;需要创造性：品牌策划、艺术创作、导演编剧&lt;/li&gt;
&lt;li&gt;需要实践经验：手艺人、工程维修、医生手术&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;AI能做的，都会越来越便宜，人类独特的软技能才是未来竞争力！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;🔹 &lt;strong&gt;3. 拥抱AI，成为“AI+”人才&lt;/strong&gt;&lt;br&gt;
未来，最值钱的不是单纯的程序员、设计师、律师，而是**“AI+”型人才：**&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;AI+法律&lt;/strong&gt;：能用AI自动整理案情的律师&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;AI+营销&lt;/strong&gt;：能用AI精准推销产品的市场人&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;AI+教育&lt;/strong&gt;：能用AI提高学习效率的老师&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;未来不是“AI取代人”，而是“会用AI的人取代不会用AI的人”！&lt;/p&gt;
&lt;h3 id=&#34;结语工业革命从未停止ai只是加速器&#34;&gt;&lt;strong&gt;结语：工业革命从未停止，AI只是加速器&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;AI并不会让人类“退休”，但一定会逼着我们进化。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第一次工业革命淘汰了手工业者，&lt;strong&gt;造就了工厂工人&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;第二次工业革命淘汰了手工作坊，&lt;strong&gt;造就了流水线工人&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;AI革命不会淘汰人类，而是&lt;strong&gt;淘汰不会用AI的人&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;🚀 &lt;strong&gt;未来已来，别再观望，快抱紧AI这条大腿吧！&lt;/strong&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>如何赚它一百万？</title>
        <link>https://blog.yearsuns.com/p/how-to-earn-your-first-million/</link>
        <pubDate>Thu, 30 Jan 2025 14:59:56 +0800</pubDate>
        
        <guid>https://blog.yearsuns.com/p/how-to-earn-your-first-million/</guid>
        <description>&lt;p&gt;想赚到100万？&lt;/p&gt;
&lt;p&gt;先搞清楚赚钱的本质——&lt;strong&gt;交换&lt;/strong&gt;。&lt;/p&gt;
&lt;h2 id=&#34;第一步赚钱的底层逻辑&#34;&gt;&lt;strong&gt;第一步：赚钱的底层逻辑&lt;/strong&gt;
&lt;/h2&gt;&lt;p&gt;赚钱的方式大致分为三种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;打工&lt;/strong&gt;：出卖时间换工资，收入受限。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;复利式赚钱&lt;/strong&gt;：一次投入，多次收益（写书、课程、短视频）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;杠杆式赚钱&lt;/strong&gt;：雇佣他人时间，放大收益（开公司、做投资）。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;想提升收入，就得&lt;strong&gt;提高单位时间的价值&lt;/strong&gt;，直到你不得不花钱购买别人的时间。&lt;/p&gt;
&lt;h2 id=&#34;第二步普通人如何赚100万&#34;&gt;&lt;strong&gt;第二步：普通人如何赚100万？&lt;/strong&gt;
&lt;/h2&gt;&lt;p&gt;赚钱是选择大于努力，真正赚钱的路子，大多数人没见过。&lt;/p&gt;
&lt;h3 id=&#34;赚钱的四个关键点&#34;&gt;&lt;strong&gt;赚钱的四个关键点&lt;/strong&gt;：
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;选对赛道&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;80%的人在苦赚辛苦钱，20%的人在赚轻松钱。&lt;/li&gt;
&lt;li&gt;选准行业，紧贴市场需求，钱自然流向你。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;持续精进&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;赚钱没有一蹴而就，一边做一边调整，越做越精准。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;疯狂执行&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;选定方向后别犹豫，拼尽全力。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;等待运气&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;你努力的时间越长，成功的概率越大。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;第三步副业到底怎么搞&#34;&gt;&lt;strong&gt;第三步：副业到底怎么搞？&lt;/strong&gt;
&lt;/h2&gt;&lt;p&gt;搞副业，先思考四个问题：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;你为谁提供服务？&lt;/li&gt;
&lt;li&gt;你能解决什么问题？&lt;/li&gt;
&lt;li&gt;你的产品/服务值多少钱？&lt;/li&gt;
&lt;li&gt;你的竞争力是什么？&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;如果不知道做什么，先去做&lt;strong&gt;变现能力强的赛道&lt;/strong&gt;，比如短视频、直播、社群电商等。&lt;/p&gt;
&lt;h3 id=&#34;副业赚钱闭环流量产品转化&#34;&gt;&lt;strong&gt;副业赚钱闭环：流量→产品→转化&lt;/strong&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;流量&lt;/strong&gt;：通过短视频、社交平台、广告吸引用户。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;产品&lt;/strong&gt;：提供有价值的内容、服务或商品。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;转化&lt;/strong&gt;：让用户愿意为你的产品买单。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;副业成长路径&#34;&gt;&lt;strong&gt;副业成长路径&lt;/strong&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;赚到第一块钱&lt;/strong&gt;，建立信心。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;收入与主业持平&lt;/strong&gt;，不怕被裁员。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;副业收入 5 倍于主业&lt;/strong&gt;，考虑全职搞。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;第四步如何投资理财让钱生钱&#34;&gt;&lt;strong&gt;第四步：如何投资理财，让钱生钱？&lt;/strong&gt;
&lt;/h2&gt;&lt;p&gt;存款1000万以下的人，不建议全职投资，那是幻想。&lt;/p&gt;
&lt;h3 id=&#34;投资的四象限&#34;&gt;&lt;strong&gt;投资的四象限&lt;/strong&gt;
&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;&lt;/th&gt;
          &lt;th&gt;赚钱&lt;/th&gt;
          &lt;th&gt;亏钱&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;简单&lt;/td&gt;
          &lt;td&gt;基金、转债&lt;/td&gt;
          &lt;td&gt;彩票&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;复杂&lt;/td&gt;
          &lt;td&gt;股票、套利&lt;/td&gt;
          &lt;td&gt;炒股盲目冲动&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;基金投资&lt;/strong&gt;：选指数基金，拉长周期，避免追涨杀跌。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;可转债&lt;/strong&gt;：用&amp;quot;打新债&amp;quot;、&amp;ldquo;双低策略&amp;quot;来低风险获利。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;套利机会&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;资本市场套利：可转债折价、LOF基金套利&lt;/li&gt;
&lt;li&gt;实体套利：抢茅台、抢演唱会门票&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;聪明的投资者不会和大佬抢肉吃，而是利用信息差寻找确定性收益。&lt;/p&gt;
&lt;h2 id=&#34;最后如何打造你的稳赚系统&#34;&gt;&lt;strong&gt;最后，如何打造你的“稳赚系统”？&lt;/strong&gt;
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;搞钱闭环&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;创富&lt;/strong&gt;：通过副业/创业获取现金流。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;增富&lt;/strong&gt;：用投资理财让钱滚钱。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;选对方向，持续执行&lt;/strong&gt;，赚钱就是信息差+执行力。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;加入核心圈子，获取赚钱信息差&lt;/strong&gt;，越早行动，越早收益。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;想赚100万？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;选赛道&lt;/strong&gt;，找到赚钱路子。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;敢执行&lt;/strong&gt;，不断优化策略。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;会投资&lt;/strong&gt;，让钱生钱。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;别再等了，干就完了！&lt;/p&gt;
&lt;p&gt;本文是根据迟帅老师的【赚它一百万商业手册】总结而来&lt;/p&gt;
</description>
        </item>
        <item>
        <title>使用 Hugo &#43; GitHub 搭建个人博客（自动部署）</title>
        <link>https://blog.yearsuns.com/p/how-to-build-a-personal-blog-with-hugo-and-github-pages/</link>
        <pubDate>Thu, 30 Jan 2025 14:59:56 +0800</pubDate>
        
        <guid>https://blog.yearsuns.com/p/how-to-build-a-personal-blog-with-hugo-and-github-pages/</guid>
        <description>&lt;p&gt;想要一个自己的博客，省心又免费？&lt;/p&gt;
&lt;p&gt;试试 &lt;strong&gt;Hugo + GitHub Pages&lt;/strong&gt;！只需几个步骤，就能搭建一个 &lt;strong&gt;高速、免费、可自动部署&lt;/strong&gt; 的个人博客网站。&lt;/p&gt;
&lt;h2 id=&#34;1-安装-hugo&#34;&gt;&lt;strong&gt;1. 安装 Hugo&lt;/strong&gt;
&lt;/h2&gt;&lt;h3 id=&#34;windows&#34;&gt;&lt;strong&gt;Windows&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;用 &lt;strong&gt;Scoop&lt;/strong&gt;（推荐）：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;scoop install hugo
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;或者直接去 &lt;a class=&#34;link&#34; href=&#34;https://gohugo.io/getting-started/installing/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Hugo 官方网站&lt;/a&gt; 下载。&lt;/p&gt;
&lt;h3 id=&#34;mac&#34;&gt;&lt;strong&gt;Mac&lt;/strong&gt;
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;brew install hugo
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;linux&#34;&gt;&lt;strong&gt;Linux&lt;/strong&gt;
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt install hugo  &lt;span style=&#34;color:#75715e&#34;&gt;# Debian/Ubuntu&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo dnf install hugo  &lt;span style=&#34;color:#75715e&#34;&gt;# Fedora&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;检查是否安装成功：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hugo version
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;2-创建-hugo-博客&#34;&gt;&lt;strong&gt;2. 创建 Hugo 博客&lt;/strong&gt;
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hugo new site myblog
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd myblog
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Hugo 会生成一个网站的基本目录结构。&lt;/p&gt;
&lt;h2 id=&#34;3-选择并安装主题&#34;&gt;&lt;strong&gt;3. 选择并安装主题&lt;/strong&gt;
&lt;/h2&gt;&lt;p&gt;去 &lt;a class=&#34;link&#34; href=&#34;https://themes.gohugo.io/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Hugo Themes&lt;/a&gt; 找个喜欢的主题，比如 &lt;code&gt;ananke&lt;/code&gt;，然后安装：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git init
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git submodule add https://github.com/theNewDynamic/gohugo-theme-ananke.git themes/ananke
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后编辑 &lt;code&gt;config.toml&lt;/code&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;theme&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ananke&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;baseURL&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://&amp;lt;username&amp;gt;.github.io/&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;4-添加第一篇文章&#34;&gt;&lt;strong&gt;4. 添加第一篇文章&lt;/strong&gt;
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hugo new posts/my-first-post.md
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后编辑 &lt;code&gt;content/posts/my-first-post.md&lt;/code&gt;，加上内容：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-md&#34; data-lang=&#34;md&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;---
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;title: &amp;#34;我的第一篇博客&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;date: 2025-01-31T12:00:00+08:00
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;draft: false
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;---
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Hello, Hugo!
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;5-本地预览&#34;&gt;&lt;strong&gt;5. 本地预览&lt;/strong&gt;
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hugo server -D
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后在浏览器访问 &lt;code&gt;http://localhost:1313&lt;/code&gt; 看效果。&lt;/p&gt;
&lt;h2 id=&#34;6-发布到-github&#34;&gt;&lt;strong&gt;6. 发布到 GitHub&lt;/strong&gt;
&lt;/h2&gt;&lt;h3 id=&#34;1创建-github-仓库&#34;&gt;&lt;strong&gt;（1）创建 GitHub 仓库&lt;/strong&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;私有仓库&lt;/strong&gt;：&lt;code&gt;myblog-src&lt;/code&gt;（存源码）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;公开仓库&lt;/strong&gt;：&lt;code&gt;&amp;lt;username&amp;gt;.github.io&lt;/code&gt;（存生成的网站文件）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2把源码推送到私有仓库&#34;&gt;&lt;strong&gt;（2）把源码推送到私有仓库&lt;/strong&gt;
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git remote add origin https://github.com/&amp;lt;username&amp;gt;/myblog-src.git
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git branch -M master
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git add .
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git commit -m &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;初始化 Hugo 博客&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git push -u origin master
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;7-创建-github-tokengithub_token&#34;&gt;&lt;strong&gt;7. 创建 GitHub Token（GITHUB_TOKEN）&lt;/strong&gt;
&lt;/h2&gt;&lt;p&gt;由于我们要把生成的静态网站推送到 &lt;code&gt;username.github.io&lt;/code&gt; 仓库，需要 GitHub Token 进行授权。&lt;/p&gt;
&lt;h3 id=&#34;1生成-token&#34;&gt;&lt;strong&gt;（1）生成 Token&lt;/strong&gt;
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;进入 GitHub，点击右上角头像，选择 &lt;strong&gt;Settings&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;在左侧菜单选择 &lt;strong&gt;Developer settings → Personal access tokens → Fine-grained tokens&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;点击 &lt;strong&gt;Generate new token&lt;/strong&gt;，然后：
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Repository access&lt;/strong&gt; 选择 &lt;code&gt;Only select repositories&lt;/code&gt;，勾选 &lt;code&gt;&amp;lt;username&amp;gt;.github.io&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Permissions&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Contents&lt;/code&gt;: 选择 &lt;strong&gt;Read and Write&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;其他保持默认&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;点击 Generate token&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;复制 Token&lt;/strong&gt;，保存到本地（只能看一次）。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;2添加到-github-actions&#34;&gt;&lt;strong&gt;（2）添加到 GitHub Actions&lt;/strong&gt;
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;进入 &lt;code&gt;myblog-src&lt;/code&gt; 仓库&lt;/li&gt;
&lt;li&gt;打开 &lt;strong&gt;Settings → Secrets and variables → Actions → New repository secret&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Name 填写 &lt;code&gt;DEPLOY_TOKEN&lt;/code&gt;，Value 粘贴刚才复制的 Token，点击 &lt;strong&gt;Add secret&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;8-配置-github-actions自动部署&#34;&gt;&lt;strong&gt;8. 配置 GitHub Actions（自动部署）&lt;/strong&gt;
&lt;/h2&gt;&lt;p&gt;在 &lt;code&gt;myblog-src&lt;/code&gt; 仓库中，新建 &lt;code&gt;.github/workflows/deploy.yml&lt;/code&gt;，写入：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Sample workflow for building and deploying a Hugo site to GitHub Pages&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Deploy Hugo site to Pages&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;on&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# Runs on pushes targeting the default branch&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;push&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;branches&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;master&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Default to bash&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;defaults&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;run&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;shell&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;bash&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;jobs&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;deploy&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;runs-on&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;ubuntu-latest&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;env&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;HUGO_VERSION&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0.142.0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;steps&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Install Hugo CLI&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;run&lt;/span&gt;: |&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;          &amp;amp;&amp;amp; sudo dpkg -i ${{ runner.temp }}/hugo.deb&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Checkout&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;actions/checkout@v4&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;with&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;submodules&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;recursive&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;fetch-depth&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Build Web&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;run&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;hugo -D&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Deploy Web&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;peaceiris/actions-gh-pages@v4&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;with&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;PERSONAL_TOKEN&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;${{ secrets.BLOG_TOKEN }}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;EXTERNAL_REPOSITORY&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;&amp;lt;username&amp;gt;/&amp;lt;username&amp;gt;.github.io&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;PUBLISH_BRANCH&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;master&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;PUBLISH_DIR&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;./public&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;commit_message&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;auto deploy&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;9-配置-github-pages&#34;&gt;&lt;strong&gt;9. 配置 GitHub Pages&lt;/strong&gt;
&lt;/h2&gt;&lt;p&gt;进入 &lt;code&gt;&amp;lt;username&amp;gt;.github.io&lt;/code&gt; 仓库：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Settings → Pages&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Branch 选择 &lt;code&gt;master&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;点击 Save&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;10-提交修改自动部署&#34;&gt;&lt;strong&gt;10. 提交修改，自动部署！&lt;/strong&gt;
&lt;/h2&gt;&lt;p&gt;以后只需提交博客源码，GitHub Actions 会自动部署：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git add .
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git commit -m &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;更新文章&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git push
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;稍等片刻，你的博客就会出现在：&lt;br&gt;
👉 &lt;code&gt;https://&amp;lt;username&amp;gt;.github.io/&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;总结&#34;&gt;&lt;strong&gt;总结&lt;/strong&gt;
&lt;/h2&gt;&lt;p&gt;你已经成功使用 &lt;strong&gt;Hugo + GitHub Pages&lt;/strong&gt; 搭建了一个 &lt;strong&gt;私有源码、自动部署&lt;/strong&gt; 的个人博客！🎉&lt;br&gt;
随时写文章，推送后 &lt;strong&gt;自动上线&lt;/strong&gt;，是不是超简单？💡&lt;/p&gt;
&lt;p&gt;🚀 &lt;strong&gt;快去试试吧！&lt;/strong&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Archives</title>
        <link>https://blog.yearsuns.com/archives/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.yearsuns.com/archives/</guid>
        <description></description>
        </item>
        <item>
        <title>Search</title>
        <link>https://blog.yearsuns.com/search/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.yearsuns.com/search/</guid>
        <description></description>
        </item>
        <item>
        <title>关于站长</title>
        <link>https://blog.yearsuns.com/about/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.yearsuns.com/about/</guid>
        <description>&lt;h3 id=&#34;站长是谁&#34;&gt;站长是谁？
&lt;/h3&gt;&lt;p&gt;江湖人称王离谱，离谱界的扛把子，沙雕界的天花板。&lt;br&gt;
曾是全职码农，因&lt;strong&gt;不善加班&lt;/strong&gt;（拒绝ICU套餐），投身自由职业，活比牛马多，活得比牛马累。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;荣誉头衔&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2006年美国时代周刊年度风云人物&lt;/li&gt;
&lt;li&gt;《感动中国》2008年度人物特别奖&lt;/li&gt;
&lt;li&gt;联合国2019年度”地球卫士“联合获奖人&lt;/li&gt;
&lt;li&gt;2022年奥林匹克杯获得者&lt;/li&gt;
&lt;li&gt;诺贝尔文学奖读者&lt;/li&gt;
&lt;li&gt;清华大学所在国学生&lt;/li&gt;
&lt;li&gt;世界500强企业简历投递者&lt;/li&gt;
&lt;li&gt;共和国马后炮炮手荣誉勋章获得者&lt;/li&gt;
&lt;li&gt;国家沙雕艺术非物质文化传承人&lt;/li&gt;
&lt;li&gt;国家特级退堂鼓表演艺术家&lt;/li&gt;
&lt;li&gt;国家特级唱反调表演艺术家&lt;/li&gt;
&lt;li&gt;国家一级抬杠运动员&lt;/li&gt;
&lt;li&gt;国家一级擦边球教练&lt;/li&gt;
&lt;li&gt;国家一级奶茶品鉴师&lt;/li&gt;
&lt;li&gt;临时抱佛脚协会会长&lt;/li&gt;
&lt;li&gt;中国驰名双标工程总负责人&lt;/li&gt;
&lt;li&gt;白日梦全球总冠军&lt;/li&gt;
&lt;li&gt;美图秀秀特约造型师&lt;/li&gt;
&lt;li&gt;闭门羹特级烹饪师&lt;/li&gt;
&lt;li&gt;墙头草栽培专家&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;建站的初衷&#34;&gt;建站的初衷
&lt;/h3&gt;&lt;p&gt;这个小破站的使命有三：&lt;strong&gt;分享知识、分享见解、分享生活&lt;/strong&gt;。&lt;br&gt;
信奉“助人者，人恒助之”，希望这个地方不仅能帮到别人，也能遇见更多志同道合的朋友，一起搞钱、共同逐梦，让梦想照进现实，而不是继续躺在购物车里。&lt;/p&gt;
&lt;h3 id=&#34;未来的计划&#34;&gt;未来的计划
&lt;/h3&gt;&lt;p&gt;紧跟AI浪潮，&lt;strong&gt;搞更多的钱，帮更多的人，装更多的X&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&#34;一句想说的话&#34;&gt;一句想说的话
&lt;/h3&gt;&lt;p&gt;睁眼观世界，闭眼世界观。&lt;/p&gt;
&lt;h3 id=&#34;请站长喝杯咖啡&#34;&gt;请站长喝杯咖啡
&lt;/h3&gt;&lt;p&gt;☕ 要么让咖啡燃起我的灵感，👻要么让香火点燃我的灵堂！&lt;br&gt;
&lt;img src=&#34;https://blog.yearsuns.com/about/wechat_payment.png&#34;
	width=&#34;261&#34;
	height=&#34;256&#34;
	srcset=&#34;https://blog.yearsuns.com/about/wechat_payment_hu_7110ac74c750e57.png 480w, https://blog.yearsuns.com/about/wechat_payment_hu_2b8d77efea6a55db.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;微信扫码&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;101&#34;
		data-flex-basis=&#34;244px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;联系站长&#34;&gt;联系站长
&lt;/h3&gt;&lt;p&gt;请老爷用大大的红包🧧来羞辱我吧！&lt;br&gt;
&lt;img src=&#34;https://blog.yearsuns.com/about/wechat_qr_code.png&#34;
	width=&#34;256&#34;
	height=&#34;256&#34;
	srcset=&#34;https://blog.yearsuns.com/about/wechat_qr_code_hu_22b9b81a6e95acf2.png 480w, https://blog.yearsuns.com/about/wechat_qr_code_hu_73fe7de4344e69f.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;微信扫码&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;100&#34;
		data-flex-basis=&#34;240px&#34;
	
&gt;&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
