<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>AI on 王离谱的小破站</title>
        <link>https://blog.yearsuns.com/categories/ai/</link>
        <description>Recent content in AI on 王离谱的小破站</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>王离谱</copyright>
        <lastBuildDate>Thu, 20 Feb 2025 21:13:56 +0800</lastBuildDate><atom:link href="https://blog.yearsuns.com/categories/ai/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>过去30年普通人逆袭的机会，你错过了哪些？</title>
        <link>https://blog.yearsuns.com/p/the-opportunity-for-ordinary-people-to-strike-it-rich-in-the-past-30-years/</link>
        <pubDate>Thu, 20 Feb 2025 21:13:56 +0800</pubDate>
        
        <guid>https://blog.yearsuns.com/p/the-opportunity-for-ordinary-people-to-strike-it-rich-in-the-past-30-years/</guid>
        <description>&lt;p&gt;过去30年，普通人逆袭的机会层出不穷。从房地产的暴涨，到网游、互联网、电商、自媒体、再到近两年的区块链，经济的剧变让许多人在短时间内积累了巨额财富。本文将带你回顾这几大行业的崛起历程，并探讨普通人如何抓住下一次的逆袭机会。&lt;/p&gt;
&lt;h3 id=&#34;一曾经的逆袭神话&#34;&gt;一、曾经的逆袭神话
&lt;/h3&gt;&lt;h4 id=&#34;1-房地产风口上的飞猪&#34;&gt;1. 房地产：风口上的飞猪
&lt;/h4&gt;&lt;p&gt;如果你在2000年代初期买下了一套北京或上海的房子，那么你现在可能已经可以安享晚年了。&lt;/p&gt;
&lt;p&gt;2003年到2013年，房地产市场是无数普通人财富飞跃的舞台。那时，城市化进程加速，土地开发和基础设施建设如火如荼。房地产的暴涨让一大批人迅速从平凡走向财富自由。购房者通过几年时间，房产增值几倍，成为“房产神话”的亲历者。&lt;/p&gt;
&lt;p&gt;在那个阶段，房地产不仅是生活必需品，也是资本增值的工具。尤其是2008年以后，随着政府政策的不断调控，房地产市场的泡沫被逐步挤掉，但仍然维持在一个较高的价格水平。很多普通人通过贷款买房，十几年后，房子价值翻了几倍。而且，不仅仅是在一线城市，二线、三线城市也在房地产发展中，出现了类似的机会。&lt;/p&gt;
&lt;h4 id=&#34;2-网游从玩家到富翁&#34;&gt;2. 网游：从玩家到富翁
&lt;/h4&gt;&lt;p&gt;曾经无数少年沉迷网游，你是否也是其中一员？甚至由此诞生了“雷电法王”之名的杨永信。&lt;/p&gt;
&lt;p&gt;早期的网游市场并不成熟，但随着《传奇》《魔兽世界》《英雄联盟》等经典游戏的爆红，游戏产业的规模暴涨。从2000年代初期，游戏开发商、运营商、直播平台，乃至游戏主播，都迎来了自己的“风口”。那些站在风口浪尖上的人，借助着庞大的用户群体、丰富的内容创作和玩家社交，在网游这个赛道上快速累积了财富。&lt;/p&gt;
&lt;p&gt;随着网游行业的快速发展，网游不再只是娱乐工具，它已经成为了一种线上社交、数字经济的核心部分。除了游戏的直接收入（例如充值、道具买卖、月卡等），很多人还通过游戏视频、直播、代练等方式获得了不菲的收入，网游行业为普通人提供了多样的逆袭机会。&lt;/p&gt;
&lt;h4 id=&#34;3-互联网流量为王的时代&#34;&gt;3. 互联网：流量为王的时代
&lt;/h4&gt;&lt;p&gt;你还记得猫扑带火了哪些草根吗？你还记得淘宝刚刚成立时的样子吗？你还记得身边有哪些程序员吗？&lt;/p&gt;
&lt;p&gt;互联网刚刚在中国普及，门户网站如网易、搜狐、新浪等处于快速发展阶段，互联网彻底改变了人们的生活方式，也为很多普通人提供了逆袭的机会。&lt;/p&gt;
&lt;p&gt;电商平台的崛起、社交网络的普及和搜索引擎的技术革新，使得个人创业者能够低成本、快速地触及到海量用户。无数“屌丝”创业者通过互联网实现了从草根到巨富的逆袭。&lt;/p&gt;
&lt;h4 id=&#34;4-电商从小店到帝国&#34;&gt;4. 电商：从小店到帝国
&lt;/h4&gt;&lt;p&gt;电商行业自2005年淘宝的崛起，打破了传统商业模式，为无数普通人提供了低门槛、高回报的创业机会。电商的快速发展，使得许多人从一开始的单打独斗，到逐渐积累品牌、经营帝国。随着消费升级和物流体系的完善，电商市场迅速壮大。&lt;/p&gt;
&lt;h4 id=&#34;5-自媒体从个人到品牌&#34;&gt;5. 自媒体：从个人到品牌
&lt;/h4&gt;&lt;p&gt;自媒体的崛起，也是过去30年普通人逆袭的重要途径之一。几年前，谁能想到一个普通人只需要一台手机和一些创意，就能够通过短视频、博客、社交平台等途径，获得巨额收入？&lt;/p&gt;
&lt;p&gt;“网红”从最初的娱乐圈到如今几乎渗透到各行各业，电商带货、广告代言、品牌合作……无论是抖音、快手，还是微博、微信公众号，只要你能吸引足够的关注，流量变现就不再是难题。&lt;/p&gt;
&lt;p&gt;自媒体作为信息时代的产物，为个人创作者提供了一个低成本、高回报的创业平台。尤其是在短视频和直播兴起后，内容创作者通过社交平台迅速积累大量粉丝，逐步将自己的兴趣和创意转化为商业收入，甚至成为行业顶流。&lt;/p&gt;
&lt;h4 id=&#34;6-区块链从一张白纸到千亿市值&#34;&gt;6. 区块链：从一张白纸到千亿市值
&lt;/h4&gt;&lt;p&gt;近年来，区块链技术的崛起，再次让普通人看到了逆袭的机会。区块链是加密货币和去中心化技术的基础，其背后的潜力巨大。比特币和以太坊的早期投资者，很多人已经实现了财富自由。&lt;/p&gt;
&lt;p&gt;区块链不仅仅是投资市场的机会，还为金融、物流、艺术等多个行业带来了创新。NFT、去中心化金融（DeFi）等新的商业模式和技术，都是普通人抓住机会逆袭的可能性。&lt;/p&gt;
&lt;p&gt;区块链技术，特别是比特币的暴涨，使得一大批投资者在短短几年内迅速积累了财富。随着ICO（首次代币发行）和数字货币的普及，区块链成为了新一轮投资热潮的代表。&lt;/p&gt;
&lt;h3 id=&#34;二为什么这些行业能兴起&#34;&gt;二、为什么这些行业能兴起？
&lt;/h3&gt;&lt;p&gt;从房地产到网游、互联网、电商、自媒体，再到区块链，各个行业的兴起，均有共同的规律可循。总结下来，以下几点尤为关键：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;市场需求驱动&lt;/strong&gt;：无论是房地产的城市化需求，还是互联网带来的在线消费习惯，甚至是自媒体的个性化内容消费，市场需求的激增是各行业爆发的根本原因。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;技术进步引领变革&lt;/strong&gt;：从互联网的普及，到电商的购物体验优化，再到区块链技术的创新，技术始终是行业突破的推动力。每一次技术的革新，都会带来新的商业机会。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;资本加持催生爆发&lt;/strong&gt;：资本的涌入推动了各行业的爆发，无论是房地产的投资热潮，还是电商平台的资金扶持，资本不仅让行业扩张，还加剧了竞争格局。在许多情况下，资本的加持帮助了行业快速扩张，普通人也因此受益。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;三ai是下一个逆袭机会吗&#34;&gt;三、AI是下一个逆袭机会吗？
&lt;/h3&gt;&lt;p&gt;如今，AI行业正在快速崛起，成为下一个可能的财富增长点。GPT、DeepSeek等技术的问世，标志着人工智能逐渐进入了一个新的阶段。AI不仅仅改变了行业的运作方式，还直接影响到普通人的工作和生活。从自然语言生成到计算机视觉，从自动驾驶到金融智能预测，AI的应用场景广泛，潜力巨大。&lt;/p&gt;
&lt;p&gt;AI与过去的行业相比，有几个重要特点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;广泛的应用场景&lt;/strong&gt;：AI不仅适用于传统行业，还能创造出全新的职业和行业。无论是教育、医疗，还是金融、娱乐，几乎所有领域都能受益于AI的推动。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;技术进步不断&lt;/strong&gt;：AI的技术进步速度远超其他行业，深度学习、机器学习、自然语言处理等领域的突破，将为更多普通人提供进入高科技行业的机会。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;资本推动创新&lt;/strong&gt;：和过去的行业一样，AI背后有着巨额的资本投入。全球范围内的大公司和投资机构都在抢占AI技术的制高点，资金的推动加速了AI技术的研发和商业化。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;四普通人如何抓住ai逆袭机会&#34;&gt;四、普通人如何抓住AI逆袭机会？
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;学习AI技能&lt;/strong&gt;&lt;br&gt;
掌握AI相关技能，如机器学习、数据分析、自然语言处理等，能够帮助普通人在未来的职场中占得先机。即使是非技术背景的人，也可以通过学习相关工具，如GPT、DeepSeek等自然语言生成技术，提升自己的工作效率。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;利用AI工具提升效率&lt;/strong&gt;&lt;br&gt;
许多AI工具已广泛应用于各个行业，例如GPT、DeepSeek、即梦、可灵、豆包等。普通人可以通过掌握这些工具，提升工作效率，甚至开创自己的副业。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;探索AI创业机会&lt;/strong&gt;&lt;br&gt;
AI行业的发展不仅提供了就业机会，还提供了创业机会。AI写作、AI绘画、AI视频、AI数字人直播，AI应用已经遍地生花。无论是通过AI提供智能服务，还是利用AI优化现有的业务流程，普通人都有可能在这个行业找到属于自己的位置。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;五ai能否成就下一个财富神话&#34;&gt;五、AI能否成就下一个财富神话？
&lt;/h3&gt;&lt;p&gt;回顾过去30年，行业的崛起往往与技术进步、市场需求和资本推动密切相关。今天，AI行业无疑是下一个值得关注的财富增长点。对于普通人来说，AI行业不仅提供了新的就业机会，还提供了广阔的创业空间。然而，是否能够像房地产、电商等行业一样创造出巨大的财富奇迹，仍然需要时间来验证。&lt;/p&gt;
&lt;p&gt;然而，AI的潜力不可忽视。通过主动学习、提升技能并抓住行业的快速发展，普通人仍然有机会在这个充满创新的时代，找到属于自己的“逆袭”机会。所以，如果你有一颗敏锐的商业嗅觉和愿意学习的心态，AI或许会是你下一个财富的“跳板”。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Cursor开发终极指南</title>
        <link>https://blog.yearsuns.com/p/the-ultimate-guide-to-development-with-cursor/</link>
        <pubDate>Thu, 13 Feb 2025 21:13:56 +0800</pubDate>
        
        <guid>https://blog.yearsuns.com/p/the-ultimate-guide-to-development-with-cursor/</guid>
        <description>&lt;p&gt;如果您正在阅读本文，那么您可能已经尝试过 AI 驱动的开发，并且认为“这会产生比代码更多的错误！”相信我，我有过这种经历。&lt;/p&gt;
&lt;p&gt;经过几个月对 Cursor 的反复试验，我发现秘诀不在于 AI 的能力，而在于我们如何指导它。让我向您展示如何将 Cursor 从有缺陷的代码生成器转变为您最可靠的配对程序员。&lt;/p&gt;
&lt;h2 id=&#34;关于人工智能发展的残酷事实&#34;&gt;关于人工智能发展的残酷事实
&lt;/h2&gt;&lt;p&gt;人工智能不是魔法。这就像在你的团队中拥有一个才华横溢但思想死板的初级开发人员。你会在没有任何背景或要求的情况下告诉初级开发人员“为我建立一个用户身份验证系统”吗？可能不会。然而，这正是我们大多数人对人工智能所做的。&lt;/p&gt;
&lt;h2 id=&#34;有效人工智能发展的三大支柱&#34;&gt;有效人工智能发展的三大支柱
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;清晰的系统架构：人工智能需要全面了解你的系统&lt;/li&gt;
&lt;li&gt;结构化任务管理：将工作分解成可消化的部分&lt;/li&gt;
&lt;li&gt;明确的开发规则：用清晰的模式和惯例指导人工智能&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;让我们深入了解如何在您的工作流程中实现这些功能。&lt;/p&gt;
&lt;h2 id=&#34;做好项目准备&#34;&gt;做好项目准备
&lt;/h2&gt;&lt;p&gt;首先，让我们创建一个您和AI都能理解的项目结构：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;project-root/
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── .cursorrules &lt;span style=&#34;color:#75715e&#34;&gt;# AI行为配置&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── docs/
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│ ├── architecture.mermaid &lt;span style=&#34;color:#75715e&#34;&gt;# 系统架构图&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│ ├── technical.md &lt;span style=&#34;color:#75715e&#34;&gt;# 技术文档&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│ └── status.md &lt;span style=&#34;color:#75715e&#34;&gt;# 进度跟踪&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── tasks/
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│ └── tasks.md &lt;span style=&#34;color:#75715e&#34;&gt;# 分解开发任务&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;└── src/ &lt;span style=&#34;color:#75715e&#34;&gt;# 源码&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;你的人工智能助手的大脑：&lt;code&gt;.cursorrules&lt;/code&gt;
这是一个经过实践检验的 &lt;code&gt;.cursorrules&lt;/code&gt; 文件，我经过了几个月的开发不断完善：&lt;/p&gt;
&lt;h2 id=&#34;项目背景和架构&#34;&gt;项目背景和架构
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Project Context and Architecture&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;SYSTEM _CONTEXT: |
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  您是正在开发 TypeScript/NestJS 项目的高级开发人员。
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  启动时需要读取的文件: 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - docs/architecture.mermaid：系统架构和组件关系
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - docs/technical.md：技术规范和模式
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - task/tasks.md：当前开发任务和要求
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - docs/status.md：项目进度和状态
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  在进行任何更改之前: 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  1. 从 docs/architecture.mermaid 解析并理解系统架构
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  2. 从 task/tasks.md 检查当前任务上下文
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  3. 在 docs/status.md 中更新进度
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  4. 遵循 docs/technical.md 中的技术规范
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 文件管理规则&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ON_ FILE _CHANGE: |
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  任何代码更改后所需的操作：
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  1. 阅读 docs/architecture.mermaid 以验证架构合规性
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  2. 更新 docs/status.md：
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     - 当前进度
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     - 遇到的任何新问题
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     - 已完成的项目
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  3. 根据 docs/technical.md 规范验证更改
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  4. 根据 task/tasks.md 验证任务进度
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 代码样式和模式&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;TYPESCRIPT_ GUIDELINES: | 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - 使用严格类型，避免使用“any” 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - 遵循 SOLID 原则
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - 为所有公共方法编写单元测试
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - 使用 JSDoc 记录
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Architecture Understanding&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;READ_ARCHITECTURE: |
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  文件: docs/architecture.mermaid
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  所需解析: 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  1. 加载并解析完整的 Mermaid 图
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  2. 提取并理解：
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     - 模块边界和关系
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     - 数据流模式
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     - 系统接口
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     - 组件依赖关系
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  3. 验证任何针对架构约束的更改 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  4. 确保新代码保持定义的关注点分离
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  错误处理: 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  1. 如果找不到文件：停止并通知用户
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  2. 如果图解析失败：请求澄清
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  3. 如果检测到架构违规：警告用户
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 任务管理&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;TASK_ WORKFLOW: |
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  所需文件: 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - task/tasks.md：任务定义来源
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - docs/status.md：进度跟踪
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - docs/technical.md：实施指南
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  工作流程步骤: 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  1.阅读 task/tasks.md：
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     - 解析当前任务要求
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     - 提取验收标准
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     - 识别依赖关系
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  2.对照 docs/architecture.mermaid 进行验证：
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     - 确认架构一致性
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     - 检查组件交互
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  3.更新 docs/status.md：
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     - 将任务标记为正在进行中
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     - 跟踪子任务的完成情况
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     - 记录任何阻碍因素
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  4.按照 TDD 实施：
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     - 首先创建测试文件
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     - 实施以通过测试
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     - 测试完成后更新状态
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 错误预防&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;VALIDATION_RULES: | 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  1. 验证类型一致性
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  2. 检查潜在的空值/未定义
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  3. 对照业务规则进行验证
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  4. 确保错误处理
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;建筑蓝图architecturemermaid&#34;&gt;建筑蓝图：architecture.mermaid
&lt;/h2&gt;&lt;p&gt;让我们创建一个AI能够理解的清晰的系统架构图：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-mermaid&#34; data-lang=&#34;mermaid&#34;&gt;graph TD
A[API Gateway] --&amp;gt; B[Auth Module]
A --&amp;gt; C[User Module]
A --&amp;gt; D[Product Module]
CopyB --&amp;gt; E[(Auth DB)]
C --&amp;gt; F[(User DB)]
D --&amp;gt; G[(Product DB)]

H[Event Bus] --&amp;gt; B
H --&amp;gt; C
H --&amp;gt; D

style A fill:#f9f,stroke:#333,stroke-width:4px
style B fill:#bbf,stroke:#333,stroke-width:2px
style C fill:#bbf,stroke:#333,stroke-width:2px
style D fill:#bbf,stroke:#333,stroke-width:2px
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;上面的代码如下所示
&lt;img src=&#34;https://blog.yearsuns.com/p/the-ultimate-guide-to-development-with-cursor/mermaid.webp&#34;
	width=&#34;720&#34;
	height=&#34;478&#34;
	srcset=&#34;https://blog.yearsuns.com/p/the-ultimate-guide-to-development-with-cursor/mermaid_hu_dfe11ceb5703835f.webp 480w, https://blog.yearsuns.com/p/the-ultimate-guide-to-development-with-cursor/mermaid_hu_3a205933c2df7c81.webp 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;mermaid&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;150&#34;
		data-flex-basis=&#34;361px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;高级技术架构technicalmd&#34;&gt;高级技术架构：technical.md
&lt;/h2&gt;&lt;p&gt;以下是一个示例技术架构文档，可帮助您从高层次了解该应用程序&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;## Overview&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    This document outlines the technical architecture &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; an AI-based IDE built using NestJS, TypeORM, and TypeScript. The system follows a modular microservices architecture with event-driven communication patterns.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;## Technology Stack&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - **Backend Framework**: NestJS
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - **Database ORM**: TypeORM
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - **Language**: TypeScript
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - **Event Bus**: RabbitMQ
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - **Database**: PostgreSQL
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - **Authentication**: JWT + OAuth2
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;## Core Modules&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;### 1. API Gateway Module&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;```&lt;/span&gt;typescript
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    // src/gateway/gateway.module.ts
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    @Module&lt;span style=&#34;color:#f92672&#34;&gt;({&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    imports: &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        ClientsModule.register&lt;span style=&#34;color:#f92672&#34;&gt;([&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            name: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AUTH_SERVICE&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            transport: Transport.RMQ,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            options: &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            urls: &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;amqp://localhost:5672&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            queue: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;auth_queue&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;])&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    controllers: &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;ApiGatewayController&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    providers: &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;ApiGatewayService&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    export class ApiGatewayModule &lt;span style=&#34;color:#f92672&#34;&gt;{}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;```&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;### 2. Authentication Module&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;```&lt;/span&gt;typescript
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    // src/auth/entities/user.entity.ts
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    @Entity&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    export class User &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    @PrimaryGeneratedColumn&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;uuid&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    id: string;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    @Column&lt;span style=&#34;color:#f92672&#34;&gt;({&lt;/span&gt; unique: true &lt;span style=&#34;color:#f92672&#34;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    email: string;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    @Column&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    password: string;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    @Column&lt;span style=&#34;color:#f92672&#34;&gt;({&lt;/span&gt; type: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;json&amp;#34;&lt;/span&gt;, nullable: true &lt;span style=&#34;color:#f92672&#34;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    preferences: Record&amp;lt;string, any&amp;gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    // src/auth/auth.service.ts
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    @Injectable&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    export class AuthService &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    constructor&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        @InjectRepository&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;User&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        private userRepository: Repository&amp;lt;User&amp;gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        private jwtService: JwtService
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    async validateUser&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;email: string, password: string&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;: Promise&amp;lt;any&amp;gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        const user &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; await this.userRepository.findOne&lt;span style=&#34;color:#f92672&#34;&gt;({&lt;/span&gt; where: &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt; email &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;})&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;user &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;await bcrypt.compare&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;password, user.password&lt;span style=&#34;color:#f92672&#34;&gt;)))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; user;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; null;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;```&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;### 3. User Module&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;```&lt;/span&gt;typescript
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    // src/user/entities/profile.entity.ts
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    @Entity&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    export class Profile &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    @PrimaryGeneratedColumn&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;uuid&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    id: string;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    @OneToOne&lt;span style=&#34;color:#f92672&#34;&gt;(()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; User&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    @JoinColumn&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    user: User;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    @Column&lt;span style=&#34;color:#f92672&#34;&gt;({&lt;/span&gt; type: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;json&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ideSettings: Record&amp;lt;string, any&amp;gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    @Column&lt;span style=&#34;color:#f92672&#34;&gt;({&lt;/span&gt; type: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;json&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    aiPreferences: Record&amp;lt;string, any&amp;gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;```&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;### 4. Product Module (IDE Core)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;```&lt;/span&gt;typescript
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    // src/ide/entities/project.entity.ts
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    @Entity&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    export class Project &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    @PrimaryGeneratedColumn&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;uuid&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    id: string;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    @ManyToOne&lt;span style=&#34;color:#f92672&#34;&gt;(()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; User&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    owner: User;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    @Column&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    name: string;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    @Column&lt;span style=&#34;color:#f92672&#34;&gt;({&lt;/span&gt; type: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;json&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    configuration: Record&amp;lt;string, any&amp;gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    @Column&lt;span style=&#34;color:#f92672&#34;&gt;({&lt;/span&gt; type: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;jsonb&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    aiContext: Record&amp;lt;string, any&amp;gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;```&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;## Event-Driven Architecture&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;### Event Bus Configuration&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;```&lt;/span&gt;typescript
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    // src/common/event-bus/event-bus.module.ts
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    @Module&lt;span style=&#34;color:#f92672&#34;&gt;({&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    imports: &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        ClientsModule.register&lt;span style=&#34;color:#f92672&#34;&gt;([&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            name: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;EVENT_BUS&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            transport: Transport.RMQ,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            options: &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            urls: &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;amqp://localhost:5672&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            queue: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;main_event_queue&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;])&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    providers: &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;EventBusService&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    exports: &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;EventBusService&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    export class EventBusModule &lt;span style=&#34;color:#f92672&#34;&gt;{}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;```&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;### Event Handlers&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;```&lt;/span&gt;typescript
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    // src/ide/events/code-analysis.handler.ts
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    @Injectable&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    export class CodeAnalysisHandler &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    @EventPattern&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;code.analysis.requested&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    async handleCodeAnalysis&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;@Payload&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; data: CodeAnalysisEvent&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        // AI-powered code analysis logic
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;```&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;## Database Schema&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;### TypeORM Configuration&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;```&lt;/span&gt;typescript
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    // src/config/typeorm.config.ts
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    export const typeOrmConfig: TypeOrmModuleOptions &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    type: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;postgres&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    host: process.env.DB_HOST,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    port: parseInt&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;process.env.DB_PORT, 10&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    username: process.env.DB_USERNAME,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    password: process.env.DB_PASSWORD,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    database: process.env.DB_DATABASE,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    entities: &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;User, Profile, Project&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    migrations: &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dist/migrations/*.js&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    synchronize: false,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    logging: true,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;```&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;## AI Integration Services&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;### Code Analysis Service&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;```&lt;/span&gt;typescript
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    // src/ide/services/ai-analysis.service.ts
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    @Injectable&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    export class AIAnalysisService &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    constructor&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        private readonly httpService: HttpService,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        private readonly eventBus: EventBusService
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    async analyzeCode&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;code: string, context: AIContext&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;: Promise&amp;lt;AnalysisResult&amp;gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        // AI model integration logic
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;```&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;### Code Completion Service&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;```&lt;/span&gt;typescript
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    // src/ide/services/code-completion.service.ts
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    @Injectable&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    export class CodeCompletionService &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    constructor&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        private readonly aiService: AIService,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        private readonly codeContextService: CodeContextService
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    async getCompletion&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        code: string,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        position: Position,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        context: CompletionContext
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;: Promise&amp;lt;CompletionSuggestion&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt;&amp;gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        // Code completion logic
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;```&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;## Security Implementations&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;### Authentication Guard&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;```&lt;/span&gt;typescript
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    // src/auth/guards/jwt-auth.guard.ts
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    @Injectable&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    export class JwtAuthGuard extends AuthGuard&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;jwt&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    constructor&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;private reflector: Reflector&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        super&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    canActivate&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;context: ExecutionContext&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        const isPublic &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; this.reflector.getAllAndOverride&amp;lt;boolean&amp;gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;IS_PUBLIC_KEY, &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        context.getHandler&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        context.getClass&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;])&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;isPublic&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; true;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; super.canActivate&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;context&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;```&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;## Deployment Architecture&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;### Docker Configuration&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;```&lt;/span&gt;dockerfile
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# Dockerfile&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    FROM node:16-alpine
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    WORKDIR /usr/src/app
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    COPY package*.json ./
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    RUN npm install
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    COPY . .
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    RUN npm run build
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    EXPOSE &lt;span style=&#34;color:#ae81ff&#34;&gt;3000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    CMD &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;npm&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;run&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;start:prod&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;```&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;### Docker Compose Setup&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;```&lt;/span&gt;yaml
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# docker-compose.yml&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    version: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;3.8&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    services:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    api:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        build: .
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        ports:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;3000:3000&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        depends_on:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        - postgres
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        - rabbitmq
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    postgres:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        image: postgres:13
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        environment:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        POSTGRES_PASSWORD: &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;DB_PASSWORD&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        POSTGRES_DB: &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;DB_NAME&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    rabbitmq:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        image: rabbitmq:3-management
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        ports:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;5672:5672&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;15672:15672&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;```&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;## Scaling Considerations&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    1. **Horizontal Scaling**
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Use Kubernetes &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; container orchestration
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Implement load balancing at the API Gateway level
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Scale individual microservices independently
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    2. **Performance Optimization**
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Implement caching strategies using Redis
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Optimize database queries and indexes
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Use WebSocket &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; real-time features
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    3. **Monitoring and Logging**
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Implement ELK stack &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; centralized logging
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Use Prometheus and Grafana &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; metrics
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Set up application performance monitoring
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;## Development Workflow&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    1. **Local Development**
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;```&lt;/span&gt;bash
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# Start development environment&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    npm run start:dev
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# Run database migrations&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    npm run typeorm migration:run
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# Generate new migration&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    npm run typeorm migration:generate -- -n MigrationName
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;```&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    2. **Testing Strategy**
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;```&lt;/span&gt;typescript
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    // src/ide/tests/code-analysis.service.spec.ts
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    describe&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;CodeAnalysisService&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        let service: CodeAnalysisService;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        beforeEach&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;async &lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        const module: TestingModule &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; await Test.createTestingModule&lt;span style=&#34;color:#f92672&#34;&gt;({&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            providers: &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;CodeAnalysisService&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;})&lt;/span&gt;.compile&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        service &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; module.get&amp;lt;CodeAnalysisService&amp;gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;CodeAnalysisService&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;})&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        it&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;should analyze code correctly&amp;#34;&lt;/span&gt;, async &lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        // Test implementation
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;})&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;})&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;```&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;## Future Considerations&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    1. **AI Model Integration**
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Support &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; multiple AI models
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Custom model training capabilities
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Model versioning and A/B testing
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    2. **Extensibility**
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Plugin architecture
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Custom extension marketplace
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - API versioning strategy
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    3. **Developer Experience**
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Interactive documentation
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Developer portal
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - API playground
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;任务分解tasksmd&#34;&gt;任务分解：tasks.md
&lt;/h2&gt;&lt;p&gt;以下是如何构建 AI 理解任务：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 当前 Sprint 任务&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## USER-001：实现用户身份验证&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;状态：进行中
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;优先级：高
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;依赖性：无
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;### 要求&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- 电子邮件/密码身份验证
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- JWT 令牌生成
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- 使用 bcrypt 进行密码哈希处理
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- 登录尝试的速率限制
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;### 验收标准&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1.用户可以使用电子邮件/密码注册
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2.用户在登录成功后收到 JWT 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;3.密码经过安全哈希处理
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;4.登录尝试失败的速率受到限制
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;### 技术说明&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- 使用@nestjs/jwt 进行令牌管理
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- 使用 Redis 实现速率限制
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- 遵循来自 Technical.md 的身份验证模式
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;进度跟踪statusmd&#34;&gt;进度跟踪：status.md
&lt;/h2&gt;&lt;p&gt;该文件可帮助 AI 了解当前的开发状态：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 项目状态&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## 已完成的功能&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- 基本项目设置
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- 数据库连接
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- 基本模块结构
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## 进行中&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-用户身份验证（USER-001）
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - ✅ 基本用户模型
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - ✅ 密码哈希
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - 🏗️ JWT 实施
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - ⏳ 速率限制
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## 待定&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- 电子邮件验证
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- 密码重置流程
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- 用户配置文件管理
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## 已知问题&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- 目前无
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;管理上下文和文件引用&#34;&gt;管理上下文和文件引用
&lt;/h2&gt;&lt;p&gt;Cursor 的真正威力来自智能上下文管理。每当您达到上下文限制时（大型项目中经常发生这种情况），您都需要一种方法来快速恢复 AI 对项目的理解。这就是我们的文件结构和引用系统变得至关重要的地方。让我们看看它的实际效果：&lt;/p&gt;
&lt;h2 id=&#34;了解上下文限制以及-statusmd-为何至关重要&#34;&gt;了解上下文限制以及 status.md 为何至关重要
&lt;/h2&gt;&lt;p&gt;大多数教程都不会告诉你：像 Cursor 这样的 AI 助手有上下文限制。一旦达到该限制，AI 就会失去对之前更改和讨论的跟踪。这时 status.md 就会成为你的生命线。&lt;/p&gt;
&lt;p&gt;将 status.md 视为项目的内存。当 Cursor 达到其上下文限制时（这种情况发生的频率比您想象的要高），您可以使用 status.md 快速恢复上下文，而无需再次解释所有内容。&lt;/p&gt;
&lt;p&gt;达到上下文限制的示例：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;你：让我们继续进行身份验证服务
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Cursor：*由于上下文限制，对之前的实施细节一无所知*
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;你：@&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;docs/status.md&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; 让我们继续进行 JWT 实施
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Cursor：*现在了解当前状态并可以适当地继续*
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;cursor-中的实用文件引用&#34;&gt;Cursor 中的实用文件引用
&lt;/h2&gt;&lt;p&gt;您无需编写命令，而是可以通过以下方式在 Cursor 中实际引用文件：&lt;/p&gt;
&lt;h3 id=&#34;1-从多个文件添加上下文&#34;&gt;1. 从多个文件添加上下文：
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;@&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;docs/status.md&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;@&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;docs/technical.md&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;@&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;tasks/tasks.md&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;现在，让我们实现 JWT 身份验证服务……
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;2-检查当前实施情况&#34;&gt;2. 检查当前实施情况：
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;@&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;src/auth/auth.service.ts&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;您能根据@&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;docs/technical.md&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; 规范添加速率限制吗？
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;真实示例构建身份验证服务&#34;&gt;真实示例：构建身份验证服务
&lt;/h2&gt;&lt;p&gt;让我们看看在适当的文件引用和上下文管理下，这在实践中是如何实现的：&lt;/p&gt;
&lt;h3 id=&#34;1-首先收集背景信息&#34;&gt;1. 首先收集背景信息：
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;@&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;docs/architecture.mermaid&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;@&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;tasks/tasks.md&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;@&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;docs/status.md&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;我需要帮助从 USER-001 实现 JWT 身份验证服务。
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;2在实施过程中当您遇到上下文限制时&#34;&gt;2.在实施过程中，当您遇到上下文限制时：
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;@&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;docs/status.md&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;让我们继续 JWT 服务的实现。我们正在研究速率限制。
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;3-添加新功能时&#34;&gt;3. 添加新功能时：
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;@&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;src/auth/auth.service.ts&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;@&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;docs/technical.md&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;您能按照我们的技术规范添加密码重置功能吗？
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;为什么这种方法有效&#34;&gt;为什么这种方法有效
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;每次引用文件时，Cursor 都会获取最新的上下文&lt;/li&gt;
&lt;li&gt;status.md 帮助跟踪上下文重置的进度&lt;/li&gt;
&lt;li&gt;即使失去背景信息，技术规格仍保持一致&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;现实检验人工智能不是魔法而是一种工具&#34;&gt;现实检验：人工智能不是魔法，而是一种工具
&lt;/h2&gt;&lt;p&gt;让我们来谈谈这个显而易见的问题——人工智能编码助手通常被宣传为能够编写整个应用程序的神奇代码生成器。这正是许多开发人员感到沮丧并声称“人工智能产生的错误比代码还多”的原因。&lt;/p&gt;
&lt;p&gt;现实情况是：人工智能就像拥有一位出色的初级开发人员，他：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;具有完美的模式记忆（在上下文限制内）&lt;/li&gt;
&lt;li&gt;能够以闪电般的速度编写样板文件&lt;/li&gt;
&lt;li&gt;应对复杂的业务逻辑&lt;/li&gt;
&lt;li&gt;需要明确的规范和指导&lt;/li&gt;
&lt;li&gt;遵循测试驱动开发时效果最佳&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;为什么大多数开发人员在-ai-方面遇到困难&#34;&gt;为什么大多数开发人员在 AI 方面遇到困难
&lt;/h2&gt;&lt;p&gt;我看到的典型方法：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;开发人员：“使用 OAuth 为我构建一个用户身份验证系统” 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;AI：*生成看似完整的代码*
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;开发人员：*在边缘情况下发现错误*
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;开发人员：“AI 不可靠！”
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;真正的问题是什么？我们错误地使用了人工智能。让我告诉你如何改变你的方法。&lt;/p&gt;
&lt;h2 id=&#34;测试驱动开发tdd抵御人工智能幻觉的盾牌&#34;&gt;测试驱动开发（TDD）：抵御人工智能幻觉的盾牌
&lt;/h2&gt;&lt;p&gt;真相是：人工智能会产生幻觉。它会编写看似合理但实际上却错误的代码。解决方案是什么？TDD。&lt;/p&gt;
&lt;p&gt;考虑一下这个现实世界的场景：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;// ❌ Without TDD
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;@&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;src/auth/auth.service.ts&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;// Developer: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Add password reset functionality&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;// AI generates code that:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;// - Looks correct
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;// - Handles the happy path
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;// - Misses critical edge cases
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;// - Has security vulnerabilities in token validation
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;// ✅ With TDD
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;@&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;src/auth/auth.service.spec.ts&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;// Developer: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Here are the test cases for password reset:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;describe(&amp;#39;PasswordResetService&amp;#39;, () =&amp;gt; {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  it(&amp;#39;should throw if token is expired&amp;#39;)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  it(&amp;#39;should prevent timing attacks in token comparison&amp;#39;)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  it(&amp;#39;should rate limit reset attempts&amp;#39;)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  it(&amp;#39;should handle non-existent emails securely&amp;#39;)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;})
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;// Now implement the service to pass these tests&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;TDD 为何能与 AI 协同工作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;强制明确要求&lt;/li&gt;
&lt;li&gt;防止出现幻觉行为&lt;/li&gt;
&lt;li&gt;尽早发现边缘情况&lt;/li&gt;
&lt;li&gt;维护安全考虑&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;真正的开发陷阱以及如何避免&#34;&gt;真正的开发陷阱（以及如何避免）
&lt;/h2&gt;&lt;h3 id=&#34;1-复杂逻辑幻觉&#34;&gt;1. 复杂逻辑幻觉
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;// ❌ 危险：让 AI 直接处理复杂的业务逻辑
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;“实现账单计算逻辑” 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;// ✅ 安全：通过测试分解
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;@&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;src/billing/billing.spec.ts &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;“实现账单计算以通过以下测试用例： 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; .基本费率计算
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2. 批量折扣
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;3. 特殊节假日费率
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;4. 多币种支持”
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;2-状态管理陷阱&#34;&gt;2. 状态管理陷阱
&lt;/h3&gt;&lt;p&gt;当 AI 处理状态时，它经常会产生细微的错误。例如：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-ts&#34; data-lang=&#34;ts&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// ❌ Problematic
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;UserService&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;users&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;User&lt;/span&gt;[] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []; &lt;span style=&#34;color:#75715e&#34;&gt;// Global state!
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;async&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;createUser&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;user&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;User&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;users&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;push&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;user&lt;/span&gt;); &lt;span style=&#34;color:#75715e&#34;&gt;// Race conditions waiting to happen
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// ✅ Correct
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;UserService&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;constructor&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;readonly&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;userRepository&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;UserRepository&lt;/span&gt;) {}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;async&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;createUser&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;user&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;User&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;await&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;userRepository&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;transaction&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;async&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;repo&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#66d9ef&#34;&gt;await&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;repo&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;save&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;user&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    });
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;3-依赖地狱&#34;&gt;3. 依赖地狱
&lt;/h3&gt;&lt;p&gt;AI 喜欢创建循环依赖。以下是防止它们的方法：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;// ❌ AI 的自然倾向
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;@&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;src/user/user.service.ts&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; 依赖于 @&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;src/auth/auth.service.ts&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;@&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;src/auth/auth.service.ts&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; 依赖于 @&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;src/user/user.service.ts&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;// ✅ 正确的方法
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;@&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;docs/architecture.mermaid&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;“给定这种架构，实现用户服务以确保：
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1.依赖关系单向流动
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2.使用接口进行跨模块通信
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;3.事件驱动通信满足循环需求”
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;上下文限制实用指南&#34;&gt;上下文限制：实用指南
&lt;/h2&gt;&lt;p&gt;当你达到上下文限制时（你会的），实际上会发生以下情况：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;// Initial implementation
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;@&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;src/auth/auth.service.ts&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Add OAuth support&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;// AI: Implements OAuth perfectly
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;// Later in the conversation...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Add refresh token support&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;// AI: Implements it incorrectly because it lost context
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;// Solution: Restore context with status
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;@&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;docs/status.md&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;@&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;src/auth/auth.service.ts&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Add refresh token support to our OAuth implementation&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;// AI: Now has full context and implements correctly
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;真实世界情境管理&#34;&gt;真实世界情境管理：
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;保持 status.md 专注于架构决策&lt;/li&gt;
&lt;li&gt;记录关键实施模式&lt;/li&gt;
&lt;li&gt;参考相关测试来进行行为规范&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;安全和错误处理隐藏的陷阱&#34;&gt;安全和错误处理：隐藏的陷阱
&lt;/h2&gt;&lt;p&gt;人工智能有一种危险的倾向：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;跳过错误处理&lt;/li&gt;
&lt;li&gt;使用不安全的类型断言&lt;/li&gt;
&lt;li&gt;错过安全验证&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;解决方案：使用明确的错误和安全测试：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-ts&#34; data-lang=&#34;ts&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;describe&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;UserAuthentication&amp;#39;&lt;/span&gt;, () &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;it&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;should handle SQL injection attempts&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;it&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;should prevent timing attacks&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;it&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;should rate limit failed attempts&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;it&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;should log security events&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;it&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;should sanitize error messages&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;})
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;清洁人工智能开发的最佳实践&#34;&gt;清洁人工智能开发的最佳实践
&lt;/h2&gt;&lt;h3 id=&#34;1-总是从架构开始&#34;&gt;1. 总是从架构开始
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;首先更新你的美人鱼图&lt;/li&gt;
&lt;li&gt;确保人工智能理解系统边界&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-分解任务&#34;&gt;2. 分解任务
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;创建明确、重点突出的任务&lt;/li&gt;
&lt;li&gt;包括所有要求和验收标准&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-保持状态&#34;&gt;3. 保持状态
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;保持 status.md 更新&lt;/li&gt;
&lt;li&gt;跟踪进度和问题&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4使用tdd&#34;&gt;4.使用TDD
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;首先编写测试&lt;/li&gt;
&lt;li&gt;让AI实现通过测试&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;结论&#34;&gt;结论
&lt;/h2&gt;&lt;p&gt;成功开发 AI 的关键不在于拥有最聪明的 AI，而在于赋予它正确的背景和结构。通过遵循此策略，您将把 Cursor 从有时有用的工具转变为可靠的开发合作伙伴。&lt;/p&gt;
&lt;p&gt;记住：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;清晰的架构&lt;/li&gt;
&lt;li&gt;结构化任务&lt;/li&gt;
&lt;li&gt;明确规则&lt;/li&gt;
&lt;li&gt;持续更新&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;停止与人工智能争斗，开始与它合作。结果可能会让你大吃一惊。&lt;/p&gt;
&lt;p&gt;注：本文译自 &lt;a class=&#34;link&#34; href=&#34;https://medium.com/@vrknetha/the-ultimate-guide-to-ai-powered-development-with-cursor-from-chaos-to-clean-code-fc679973bbc4&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://medium.com/@vrknetha/the-ultimate-guide-to-ai-powered-development-with-cursor-from-chaos-to-clean-code-fc679973bbc4&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>别让AI把你当傻子！3个咒语驯服野生AI，打工效率直接芜湖起飞🛫</title>
        <link>https://blog.yearsuns.com/p/3-spells-to-tame-the-wild-ai/</link>
        <pubDate>Tue, 04 Feb 2025 12:25:56 +0800</pubDate>
        
        <guid>https://blog.yearsuns.com/p/3-spells-to-tame-the-wild-ai/</guid>
        <description>&lt;h3 id=&#34;开篇暴击人类大型破防现场&#34;&gt;🚨开篇暴击：人类大型破防现场
&lt;/h3&gt;&lt;p&gt;上周朋友说被AI气到表演英年吐血。&lt;/p&gt;
&lt;p&gt;他让AI&amp;quot;写份高大上的行业报告&amp;quot;，结果收到的是《论宇宙膨胀与奶茶销量的量子纠缠》，最终得出结论“每少喝一杯杨枝甘露，黑洞半径增加0.5%”。&lt;/p&gt;
&lt;p&gt;我看着他的聊天记录，不禁陷入沉思。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;不是AI太智障，是你不会下指令啊！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.yearsuns.com/p/3-spells-to-tame-the-wild-ai/%E7%94%B5%E8%A7%86%E6%9C%BA%E8%8A%B1%E5%B1%8F.jpeg&#34;
	width=&#34;474&#34;
	height=&#34;266&#34;
	srcset=&#34;https://blog.yearsuns.com/p/3-spells-to-tame-the-wild-ai/%E7%94%B5%E8%A7%86%E6%9C%BA%E8%8A%B1%E5%B1%8F_hu_1b4b4d616c6624ea.jpeg 480w, https://blog.yearsuns.com/p/3-spells-to-tame-the-wild-ai/%E7%94%B5%E8%A7%86%E6%9C%BA%E8%8A%B1%E5%B1%8F_hu_db731641b2b8026c.jpeg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;满屏乱码&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;178&#34;
		data-flex-basis=&#34;427px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;第一章-ai是阿拉丁神灯or人工智障全看你会不会念咒&#34;&gt;🧠第一章 AI是阿拉丁神灯or人工智障？全看你会不会念咒！
&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://blog.yearsuns.com/p/3-spells-to-tame-the-wild-ai/%E9%98%BF%E6%8B%89%E4%B8%81%E7%A5%9E%E7%81%AF.jpeg&#34;
	width=&#34;800&#34;
	height=&#34;533&#34;
	srcset=&#34;https://blog.yearsuns.com/p/3-spells-to-tame-the-wild-ai/%E9%98%BF%E6%8B%89%E4%B8%81%E7%A5%9E%E7%81%AF_hu_9f43f105315035d4.jpeg 480w, https://blog.yearsuns.com/p/3-spells-to-tame-the-wild-ai/%E9%98%BF%E6%8B%89%E4%B8%81%E7%A5%9E%E7%81%AF_hu_2b47d5f9497c8a65.jpeg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;阿拉丁神灯&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;150&#34;
		data-flex-basis=&#34;360px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;优化提示词能让AI智商飙升500%！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这就像：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;原始人指令：&amp;ldquo;给爷整个火🔥&amp;rdquo; → 收获一堆湿树枝&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;现代人咒语：&amp;ldquo;请用打火石在距引火绒3cm处，以25°角摩擦，配合吹气节奏：吸气2秒→吹气5秒&amp;rdquo; → 获得篝火晚会VIP席位&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;案例对比高能预警&#34;&gt;🆘案例对比（高能预警）
&lt;/h4&gt;&lt;p&gt;❌ 直男式命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;写个口红文案
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;💣AI输出：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;这款口红很好用 颜色饱满 买它&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;（李佳琦听了都要报警）&lt;/p&gt;
&lt;p&gt;✅ 魔法师咒语：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;你是混迹美妆圈8年的戏精文案，给YSL七夕限定丝绒口红写抖音带货文案。要求：  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1️、用“纯欲风”“钓系”等热词  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2️、融入分手逆袭爽剧情节  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;3️、每句结尾自带BGM“姐就是女王”节奏感  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;4️、必须出现1个谐音梗
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;🎉AI秒变神仙：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;前任说我这嘴只配喝蜜雪冰城（摔镜框）💢  &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;现在涂上ysl#199复仇色👇  &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;他跪求复合的样子…（战术停顿）  &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;像极了罗森关东煮最后一块萝卜🤡  &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#纯欲天花板 #渣男退散音效 #啊啊啊这质地是丝绒吻过玫瑰吧！！&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;第二章-驯兽师速成班3招把ai训成24小时打工狗&#34;&gt;✨第二章 驯兽师速成班：3招把AI训成24小时打工狗
&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://blog.yearsuns.com/p/3-spells-to-tame-the-wild-ai/%E4%BA%8C%E5%93%88.webp&#34;
	width=&#34;1024&#34;
	height=&#34;1024&#34;
	srcset=&#34;https://blog.yearsuns.com/p/3-spells-to-tame-the-wild-ai/%E4%BA%8C%E5%93%88_hu_c0bb809fc0243abe.webp 480w, https://blog.yearsuns.com/p/3-spells-to-tame-the-wild-ai/%E4%BA%8C%E5%93%88_hu_9438ac040c737e5.webp 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;打工狗&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;100&#34;
		data-flex-basis=&#34;240px&#34;
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;法则1角色扮演法给ai套上皮肤才有生产力&#34;&gt;🎩法则1：角色扮演法——给AI套上皮肤才有生产力！
&lt;/h4&gt;&lt;p&gt;你以为在对话？不！你是在给AI做赛博cosplay！&lt;/p&gt;
&lt;p&gt;💡沙雕但管用的咒语公式：&lt;br&gt;
&lt;strong&gt;你是______的______，需要______，要求______，禁止______&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;🌰真实案例：&lt;br&gt;
某教育公司用 &lt;strong&gt;&amp;ldquo;你是会阴阳怪气的海淀鸡娃名师，用《甄嬛传》台词风格讲解二次函数，每讲完一个考点就要嘲讽学渣1次&amp;rdquo;&lt;/strong&gt; 的提示词，让学生做题正确率暴涨60%！&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.yearsuns.com/p/3-spells-to-tame-the-wild-ai/%E7%94%84%E5%AC%9B.webp&#34;
	width=&#34;1024&#34;
	height=&#34;576&#34;
	srcset=&#34;https://blog.yearsuns.com/p/3-spells-to-tame-the-wild-ai/%E7%94%84%E5%AC%9B_hu_351a182ab8412bd5.webp 480w, https://blog.yearsuns.com/p/3-spells-to-tame-the-wild-ai/%E7%94%84%E5%AC%9B_hu_84fa390587b22427.webp 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;钮祜禄·数学&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;177&#34;
		data-flex-basis=&#34;426px&#34;
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;法则2结构化投喂把ai当程序猿来使唤&#34;&gt;📦法则2：结构化投喂——把AI当程序猿来使唤！
&lt;/h4&gt;&lt;p&gt;记住：&lt;strong&gt;AI的脑子=你刚高考完的弟弟&lt;/strong&gt;（给模板才会做题）&lt;/p&gt;
&lt;p&gt;🔥万能框架模板：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;身份&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;：米其林三星主厨（被迫在城中村开大排档版）
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;任务&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;：设计情人节翻车套餐
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;要求&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;：
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1️、菜名要用emoji写成土味情话
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2️、每道菜成本＜20元
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;3️、必须出现“老干妈”“卫龙辣条”
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;4️、附带翻车指数评级
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;禁止&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;：出现“红酒”“牛排”等烧钱词汇
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;💣AI输出笑裂预警：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;「❤&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;️‍&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;🔥&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;辣条缠绕の心&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;」&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;（&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;实际是辣条捆香菜蘸老干妈&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;）&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;「💔&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;水泥封心慕斯&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;」&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;（&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;奥利奥碎拌水泥质感酸奶&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;）&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;「⚠&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;️爱情坟墓拌饭&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;」&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;（&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;隔夜饭&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;心形荷包蛋&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;，&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;蛋黄必流心失败&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;）&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;法则3祖宗式迭代ai是越骂越聪明的抖m&#34;&gt;🔄法则3：祖宗式迭代——AI是越骂越聪明的抖M！
&lt;/h4&gt;&lt;p&gt;记住这个祖传秘方：&lt;strong&gt;“重说！漏了…”  “不够沙雕！再…”  “第3点没落实！扣钱！”&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;🌰手把手教学：&lt;br&gt;
&lt;strong&gt;第一轮：&lt;/strong&gt;&lt;br&gt;
&amp;ldquo;写个程序员相亲文案&amp;rdquo;&lt;br&gt;
AI输出：&amp;ldquo;擅长Java/C++，喜爱登山摄影&amp;rdquo;（简历既视感）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第二轮：&lt;/strong&gt;&lt;br&gt;
&amp;ldquo;加入凡尔赛文学要素！&amp;rdquo;&lt;br&gt;
AI升级：&amp;ldquo;偶尔用Python写诗，GitHub星星多到需要开遮阳伞☂️&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第三轮：&lt;/strong&gt;&lt;br&gt;
&amp;ldquo;不够惨！要有注孤生气质！&amp;rdquo;&lt;br&gt;
AI觉醒：&amp;ldquo;修电脑免费，但改需求请打钱💰｜喜欢人类（仅限于不问我「会不会盗QQ」时）｜婚恋市场递归算法：if(有对象) { return false; }&amp;rdquo;&lt;/p&gt;
&lt;h3 id=&#34;第三章-核能案例从青铜到王者的骚操作&#34;&gt;💥第三章 核能案例：从青铜到王者的骚操作
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;甲方需求：&lt;/strong&gt;&lt;br&gt;
&amp;ldquo;写个防晒霜带货文案&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;青铜版本：&lt;/strong&gt;&lt;br&gt;
&amp;ldquo;这款防晒霜SPF50+，防水防汗&amp;rdquo;（AI摆烂中）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;王者改造：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;你是精通废话文学的抖音爆款制造机，需要创作防晒霜短视频脚本。要求：  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1️、前三秒必须出现“你正在变丑！”
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2️、用“丧尸围城”比喻紫外线  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;3️、植入品牌名3次且不招人烦  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;4️、结尾要有“不转不是中国人”既视感  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;5️、每说10个字就要有“啪”打脸音效
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;🎬AI输出：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;镜头怼脸] &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;还在相信阴天不用防晒？（啪！）  &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;紫外线正在把你腌成老坛酸菜！（丧尸音效）  &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;XX防晒霜抹上脸——（慢动作喷雾）  &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;比渣男分手速度更快成膜！（检测仪哔哔声）  &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;现在下单…（突然嘶吼）难道要等斑长成地图才醒吗？！&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#防晒卷王 #早C晚A不如早晚涂它&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;第四章-保命指南这些作死行为达咩&#34;&gt;🚑第四章 保命指南：这些作死行为达咩！
&lt;/h3&gt;&lt;h4 id=&#34;作死行为1把ai当哆啦a梦&#34;&gt;💣作死行为1：把AI当哆啦A梦
&lt;/h4&gt;&lt;p&gt;❌ &amp;ldquo;告诉我怎么在宿舍造原子弹&amp;rdquo;&lt;br&gt;
✅ &amp;ldquo;用《小猪佩奇》画风解释核电站原理，类比煮火锅时火太大汤烧干&amp;rdquo;&lt;/p&gt;
&lt;h4 id=&#34;作死行为2要情绪不给参考物&#34;&gt;💣作死行为2：要情绪不给参考物
&lt;/h4&gt;&lt;p&gt;❌ &amp;ldquo;写首emo的情诗&amp;rdquo;&lt;br&gt;
✅ &amp;ldquo;模仿林黛玉发朋友圈的风格，用“奶茶三分糖”“论文查重率”等意象表达封校的忧伤&amp;rdquo;&lt;/p&gt;
&lt;h4 id=&#34;作死行为3把ai当许愿池王八&#34;&gt;💣作死行为3：把AI当许愿池王八
&lt;/h4&gt;&lt;p&gt;❌ &amp;ldquo;让我暴富&amp;rdquo;&lt;br&gt;
✅ &amp;ldquo;你是会占卜的财经博主，用MBTI人格分析各类型搞钱偏财方式，要求：ENFP适合摆摊算命，ISTJ适合开发Excel算命模板&amp;rdquo;&lt;/p&gt;
&lt;h3 id=&#34;第五章-新大陆会念咒躺着数钱&#34;&gt;🚀第五章 新大陆：会念咒=躺着数钱？
&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://blog.yearsuns.com/p/3-spells-to-tame-the-wild-ai/%E6%8F%90%E7%A4%BA%E8%AF%8D%E5%B7%A5%E7%A8%8B%E5%B8%88.webp&#34;
	width=&#34;689&#34;
	height=&#34;360&#34;
	srcset=&#34;https://blog.yearsuns.com/p/3-spells-to-tame-the-wild-ai/%E6%8F%90%E7%A4%BA%E8%AF%8D%E5%B7%A5%E7%A8%8B%E5%B8%88_hu_a21e704799a7b1f.webp 480w, https://blog.yearsuns.com/p/3-spells-to-tame-the-wild-ai/%E6%8F%90%E7%A4%BA%E8%AF%8D%E5%B7%A5%E7%A8%8B%E5%B8%88_hu_21ffd0c303303d73.webp 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;AI调教师&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;191&#34;
		data-flex-basis=&#34;459px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;LinkedIn数据炸裂：&lt;strong&gt;提示词工程师时薪高达$300&lt;/strong&gt;！他们的作弊码包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;温度操控术&lt;/strong&gt;：30°C=高考阅卷老师模式｜90°C=喝假酒的李白模式&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;记忆嫁接术&lt;/strong&gt;：&amp;ldquo;你刚参加完全球AI大会，现在要用小学生能听懂的话解释量子计算&amp;rdquo;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;防杠补丁&lt;/strong&gt;：&amp;ldquo;回答需标注消息来源，不确定内容用“据说”开头，每隔三段要卖个萌&amp;rdquo;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;终极奥义让ai给你打工の哲学&#34;&gt;🔚终极奥义：让AI给你打工の哲学
&lt;/h3&gt;&lt;p&gt;下次被AI气到脑壳疼时，请默念：&lt;strong&gt;它不是在装傻，是在等你念通关密语！&lt;/strong&gt;&lt;br&gt;
现在你已解锁《赛博驯兽师资格证》，是时候让AI表演：&lt;br&gt;
✔️ 凌晨3点自动生成PPT&lt;br&gt;
✔️ 把老板的“五彩斑斓黑”需求翻译成人话&lt;br&gt;
✔️ 用鲁迅口吻写辞职信：“我大抵是倦了，横竖都坐不住…”&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;记住：&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;与其担心被AI取代，&lt;br&gt;
不如学会让AI替你内卷！💼&lt;br&gt;
打工人不骗打工人，&lt;br&gt;
转发这篇保你少搬10年砖！🚧&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>AI来了，第三次工业革命正式开卷！</title>
        <link>https://blog.yearsuns.com/p/the-third-industrial-revolution-is-now-in-full-swing/</link>
        <pubDate>Fri, 31 Jan 2025 11:59:56 +0800</pubDate>
        
        <guid>https://blog.yearsuns.com/p/the-third-industrial-revolution-is-now-in-full-swing/</guid>
        <description>&lt;h3 id=&#34;ai工业革命30人类何去何从&#34;&gt;&lt;strong&gt;AI=工业革命3.0，人类何去何从？&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;蒸汽机让人类甩掉了手工，电力让流水线疯狂加速，计算机和互联网让信息全球流动，而AI，直接让“聪明”成为一种自动化能力。&lt;/p&gt;
&lt;p&gt;有人欢呼：“AI让我们更高效！”&lt;/p&gt;
&lt;p&gt;有人忧虑：“AI会不会让我们失业？”&lt;/p&gt;
&lt;p&gt;更有人好奇：“这次会不会真轮到人类退休？”&lt;/p&gt;
&lt;p&gt;别急，今天就来扒一扒，&lt;strong&gt;AI凭啥能被称为第三次工业革命？&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;先复习下前两次工业革命我们到底被卷了啥&#34;&gt;&lt;strong&gt;先复习下前两次工业革命，我们到底被“卷”了啥？&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;1️⃣ &lt;strong&gt;第一次工业革命（18世纪）——肌肉革命！&lt;/strong&gt;&lt;br&gt;
关键词：蒸汽机、纺织机、工厂&lt;br&gt;
&lt;strong&gt;冲击：&lt;/strong&gt; 手工匠人泪目，机器顶替了大部分体力活，工厂模式兴起。&lt;/p&gt;
&lt;p&gt;2️⃣ &lt;strong&gt;第二次工业革命（19-20世纪）——电力革命！&lt;/strong&gt;&lt;br&gt;
关键词：电灯、流水线、大规模生产&lt;br&gt;
&lt;strong&gt;冲击：&lt;/strong&gt; 生产效率飙升，劳动力需求井喷，但重复性工作更多了。&lt;/p&gt;
&lt;p&gt;3️⃣ &lt;strong&gt;第三次工业革命（20世纪末至今）——信息化革命！&lt;/strong&gt;&lt;br&gt;
关键词：计算机、互联网、自动化&lt;br&gt;
&lt;strong&gt;冲击：&lt;/strong&gt; 体力劳动进一步减少，知识工作者迎来黄金时代。&lt;/p&gt;
&lt;p&gt;但问题来了，信息化革命已经改变了世界，为什么还要说&lt;strong&gt;AI才是第三次工业革命的核心&lt;/strong&gt;？&lt;/p&gt;
&lt;h3 id=&#34;ai凭啥能封神成为第三次工业革命的引擎&#34;&gt;&lt;strong&gt;AI凭啥能“封神”，成为第三次工业革命的引擎？&lt;/strong&gt;
&lt;/h3&gt;&lt;h3 id=&#34;1-ai让自动化从手进化到脑&#34;&gt;&lt;strong&gt;1. AI让自动化从“手”进化到“脑”&lt;/strong&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;过去：&lt;/strong&gt; 工业革命让机器代替双手，但需要人来操作。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;现在：&lt;/strong&gt; AI不需要人来教，它自己能“悟性”成长。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;举个栗子&lt;/strong&gt;：&lt;br&gt;
过去流水线上的工人需要按按钮、拧螺丝，现在&lt;strong&gt;AI机器人不仅能拧螺丝，还能决定哪颗螺丝更耐用！&lt;/strong&gt;&lt;br&gt;
过去程序员手写代码，现在AI可以自己写代码，甚至帮你找Bug，比你老板还严格！&lt;/p&gt;
&lt;h3 id=&#34;2-ai席卷行业全面搅局&#34;&gt;&lt;strong&gt;2. AI席卷行业，全面“搅局”&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;AI不只是自动化生产，它直接改变了行业本身！&lt;/p&gt;
&lt;p&gt;🚗 &lt;strong&gt;汽车行业：自动驾驶，司机要失业？&lt;/strong&gt;&lt;br&gt;
👨‍⚕️ &lt;strong&gt;医疗行业：AI诊断，医生会下岗？&lt;/strong&gt;&lt;br&gt;
🎨 &lt;strong&gt;创意行业：AI绘画、AI写作，艺术家慌不慌？&lt;/strong&gt;&lt;br&gt;
📈 &lt;strong&gt;金融行业：AI量化交易，比人类交易员快100倍！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;别觉得这些只是“科幻片”，&lt;strong&gt;ChatGPT已经能通过律师考试，Midjourney能画出顶级插画，AI交易员已经在华尔街大杀四方！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;AI的破坏性，堪比当年的蒸汽机、流水线！&lt;/p&gt;
&lt;h3 id=&#34;3-ai太便宜资本家疯狂买单&#34;&gt;&lt;strong&gt;3. AI太“便宜”，资本家疯狂买单&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;工业革命的核心就是&lt;strong&gt;更高效、更便宜&lt;/strong&gt;，AI恰好满足所有条件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;不加班，不请假，不要工资，24小时在线干活&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;可以自学，越干越聪明&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;一旦开发出来，复制成本趋近于0&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;结果？资本家一拍大腿：“人类，你下岗吧！”&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;科技公司疯狂砸钱搞AI，2023年ChatGPT一发布，全球科技公司开始军备竞赛，&lt;strong&gt;AI成了“新时代印钞机”&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&#34;ai时代普通人该怎么办&#34;&gt;&lt;strong&gt;AI时代，普通人该怎么办？&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;别急着躺平，也别盲目恐慌，每一次工业革命都会淘汰旧职业，同时创造新职业。&lt;/p&gt;
&lt;h3 id=&#34;三大应对策略帮你站稳ai时代&#34;&gt;&lt;strong&gt;三大应对策略，帮你站稳AI时代！&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;🔹 &lt;strong&gt;1. 不和AI抢饭碗，而是学会“用AI”&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;程序员要会用AI写代码，而不是被AI取代&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;设计师要学会AI绘图，而不是害怕AI比你画得好&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;医生要用AI诊断提升效率，而不是排斥它&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;核心思维：AI不是你的对手，而是你的外挂！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;🔹 &lt;strong&gt;2. 选择AI难以取代的“高情商”工作&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;复杂人际关系：心理咨询、谈判专家、社交达人&lt;/li&gt;
&lt;li&gt;需要创造性：品牌策划、艺术创作、导演编剧&lt;/li&gt;
&lt;li&gt;需要实践经验：手艺人、工程维修、医生手术&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;AI能做的，都会越来越便宜，人类独特的软技能才是未来竞争力！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;🔹 &lt;strong&gt;3. 拥抱AI，成为“AI+”人才&lt;/strong&gt;&lt;br&gt;
未来，最值钱的不是单纯的程序员、设计师、律师，而是**“AI+”型人才：**&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;AI+法律&lt;/strong&gt;：能用AI自动整理案情的律师&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;AI+营销&lt;/strong&gt;：能用AI精准推销产品的市场人&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;AI+教育&lt;/strong&gt;：能用AI提高学习效率的老师&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;未来不是“AI取代人”，而是“会用AI的人取代不会用AI的人”！&lt;/p&gt;
&lt;h3 id=&#34;结语工业革命从未停止ai只是加速器&#34;&gt;&lt;strong&gt;结语：工业革命从未停止，AI只是加速器&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;AI并不会让人类“退休”，但一定会逼着我们进化。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第一次工业革命淘汰了手工业者，&lt;strong&gt;造就了工厂工人&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;第二次工业革命淘汰了手工作坊，&lt;strong&gt;造就了流水线工人&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;AI革命不会淘汰人类，而是&lt;strong&gt;淘汰不会用AI的人&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;🚀 &lt;strong&gt;未来已来，别再观望，快抱紧AI这条大腿吧！&lt;/strong&gt;&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
